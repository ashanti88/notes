#+TAGS: rhel centos fedora red_hat



* Red Hat Enterprise Linux - Life Cycle 10yrs - Release Cycle 3-4yrs
HomePage: https://access.redhat.com/
Security Advisories: https://access.redhat.com/security/security-updates/#/security-advisories
* RHEL Config Files
*** /etc/sysconfig
RHEL: [[https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/5/html/Deployment_Guide/ch-sysconfig.html][RHEL 5 /etc/sysconfig]]
Fedora: [[https://docs.fedoraproject.org/en-US/Fedora/12/html/Deployment_Guide/ch-sysconfig.html#s1-sysconfig-files][Fedora - /etc/sysconfig]]
* Usage
** RHEL6 Logging


** RHEL7 Networking
*** Files
/etc/sysconfig/network-scripts/
*** Cmds
[[file://home/crito/org/tech/cmds/ethtool.org][ethtool]] -
[[file://home/crito/org/tech/cmds/nmcli.org][nmcli]] - NetworkManager Cli
[[file://home/crito/org/tech/cmds/ip.org][ip]] - systemd ifconfig
[[file:~/org/tech/cmds/iw.org][iw]] - systemd iwconfig
[[file://home/crito/org/tech/cmds/wifi-menu.org][wifi-menu]] - ncurses wifi configuration tool
*** Example Interface Configs
#+BEGIN_EXAMPLE
TYPE=Ethernet
BOOTPROTO=none
DEFROUTE=yes
IPV4_FAILURE_FATAL=no
IPV6INIT=yes
IPV6_AUTOCONF=yes
IPV6_DEFROUTE=yes
IPV6_FAILURE_FATAL=no
NAME=enp0s17
UUID=7f1aff2d-b154-4436-9497-e3a4dedddcef
ONBOOT=no
HWADDR=00:0C:29:A1:B5:D6
PEERDNS=yes
PEERROUTES=yes
IPV6_PEERDNS=yes
IPV6_PEERROUTES=yes
#+END_EXAMPLE

- static address example
#+BEGIN_EXAMPLE
DEVICE="eth0"
BOOTPROTO="static"
IPADDR="10.10.20.11"
NETMASK="255.255.255.0"
ONBOOT="yes"
TYPE="Ethernet"
USERCTL="yes"
PEERDNS="yes"
IPV6INIT="no"
PERSISTENT_DHCLIENT="1"
#+END_EXAMPLE

*** Setting an Interface to DHCP
BOOTPROTO=dhcp
ONBOOT=yes
*** Setting an Interface to a Static ip
BOOTPROTO=static
ONBOOT=yes
IPADDR=172.27.0.32
NETMASK=255.255.255.0
GATEWAY=172.27.0.1
DNS1=172.27.0.5
*** Setting up /etc/hosts
This file is read before a request is made to the dns server 
add here any hostname => ip
Foramt is [ip hostname]
127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
*** Permanently change hostname and DNS
- Add DNS and Hostname to interface config file
HOSTNAME=server.alick.com
DNS1=192.168.1.5
DNS2=8.8.8.8
SEARCH=alick.com

- Add the DNS server to the resolv.conf file
nameserver 8.8.8.8

*** Temporary change hostname
#+BEGIN_SRC sh
hostname $HOSTNAME
#+END_SRC

*** Basic Overview
- nmcli
- ip
- tracepath
- traceroute
- netstat
- ss

- Verifying Current State
#+BEGIN_SRC 
ip addr show
#+END_SRC
gives address information about all interfaces

#+BEGIN_SRC sh
ip -s link show enp1s0 
#+END_SRC
give packet statistics

don't use ifconfig, has now being depricated and may not show all configured information

- Analyse a path
#+BEGIN_SRC sh
tracepath www.redhat.com
traceroute www.redhat.com
#+END_SRC

- Analyse ports and services 
#+BEGIN_SRC sh
netstat -tunapl
ss - tunapl
netstat -tunpel
#+END_SRC

- NetworkManager monitors and manages network settings
  - nmcli is used to manage the settings
  - configuration is saves in the /etc/sysconfig/network-scripts directory

- nmcli concepts  
  - a device is a network
  - a connection is a collection of configuration settings
  - multiple connections can exist for a device, but only one can be active at a time    
  - to find out which connections exist for which devices
    #+BEGIN_SRC sh
    nmcli con show
    #+END_SRC
  - get device status
    #+BEGIN_SRC sh
    nmcli dev status
    #+END_SRC
    
- Creating Network Connections with nmcli
  - create a new connection with name "dhcp" that autoconnects on int eno1
    #+BEGIN_SRC sh
    nmcli con add con-name "dhcp" type ethernet ifname eno1
    #+END_SRC
  - create a new connection with the name "static" that doesn't connect automatically
    #+BEGIN_SRC sh
    nmcli con add con-name "static ifname eno1 autoconnect no type ethernet ip4 192.168.122.102 gw4 192.168.122.1
    #+END_SRC
  - bring up the static connection
    #+BEGIN_SRC sh
    nmcli con up "static" 
    #+END_SRC
  - bring down the static connection
    #+BEGIN_SRC sh
    nmcli con down "static"
    #+END_SRC
  - Change a connection variable
    #+BEGIN_SRC sh
    nmcli con show "static"
    cmcli con mod "static" ipv4.dns 192.168.122.1
    #+END_SRC
    the first cmd will show all available variables and current values
  - add another dns server
    #+BEGIN_SRC sh
    nmcli con mod "static" +ipv4.dns 8.8.8.8
    #+END_SRC
  - modify the ip and gw
    #+BEGIN_SRC sh
    nmcli con mod "static" ipv4.addresses "192.168.100.10/24 192.168.100.1"
    #+END_SRC
  - add a secondary IP addr
    #+BEGIN_SRC sh
    nmcli con mod "static" +ipv4.addresses 10.0.0.10/24
    #+END_SRC
  - Activate new settings
    #+BEGIN_SRC sh
    nmcli con up "static"
    #+END_SRC
    
- Configuration Files
/etc/sysconfig/network-scripts/ifcfg-<nam>

- after modifying any of these files use
  #+BEGIN_SRC sh
  nmcli con reload
  #+END_SRC
  to reload the configs

- Setting the hostname
/etc/hostname

- on the cmd line you can use
  #+BEGIN_SRC sh
  hostnamectl set-hostname server1.example.com
  #+END_SRC

- DNS
/etc/sysconfig/network-scripts/ifcfg-<name> --> /etc/resolv.conf
the dns name resolver is pushed from ifcfg-name to /etc/resolv.conf
  - to makesure it is always correct place it in ifcfg-name
    
*** Routing
- Setting up Static Routes
using the nmtui cmd you can easily add routes in the connections edit connection page.
  - this method will add a config file to /etc/sysconfig/network-scripts/route-<int>... 
    #+BEGIN_EXAMPLE
    ADDRESS0=10.0.0.0
    NETMASK0=255.255.255.0
    GATEWAY0=192.168.4.4
    #+END_EXAMPLE
    
*** Understanding Bridges
- virtual bridges are used with vms
  
vm0       vm1
 |         |
vnet0    vnet1
 \        /
  \      /
   virbr0
      |
    eno1

- to view bridge details
#+BEGIN_SRC sh
brctl show
#+END_SRC
this will show all vm interfaces connected to the bridge
 
- show the bridge interface details
#+BEGIN_SRC sh
ip link show
#+END_SRC

**** Setting Up a Bridge
- install the utils
#+BEGIN_SRC sh
yum install bridge-utils
#+END_SRC

- disconnect the interface you are creating the bridge on
#+BEGIN_SRC sh
nmcli dev show
nmcli dev disconnect enp1s0
#+END_SRC

- create the connection to the bridge and add the interface
#+BEGIN_SRC sh
nmcli con add type bride-slave con-name br0-port1 ifname enp1s0 master br0
#+END_SRC

- create the bridge interface
#+BEGIN_SRC sh
nmcli con add type bridge con-name br0 ifname br0
#+END_SRC

This new bridge will have a configuration file placed into /etc/sysconfig/network-scripts/
ifcfg-br0
ifcfg-br0port1

*** Understanding Network Bonds and Teams
- Both take care of link aggregation
- Network Bonding is deprecated, use Network Teaming instead
- Teaming works with a kernel driver and a user space daemon
  - teamd
    
- Teamd
  - modes are called runners
    - broadcast
    - roundrobin
    - activebackup
    - loadbalance
    - lacp
  - show current state of the team with name "team0"
    #+BEGIN_SRC sh
    teamctl team0 state
    #+END_SRC
    
**** Configuring Teams
- Four Steps to Configuring Teaming
  - Create team interface
    #+BEGIN_SRC sh
    nmcli con add type team con-name team0 ifname team0 config '{"runner":{"name": "loadbalancer"}}
    #+END_SRC
  - Determine network configuration
    #+BEGIN_SRC sh
    nmcli con mod team0 ipv4.addresses 10.0.0.10/24
    nmcli con mod team0 ipv4.method manual
    #+END_SRC
  - Assign the port interfaces
    #+BEGIN_SRC sh
    nmcli con add type team-slave ifname eth0 master team0 con-name team0-eth0
    nmcli con add type team-slave ifname eth1 master team0 con-name team0-eth1
    #+END_SRC
  - Bring team and port interfaces up/down
    #+BEGIN_SRC sh
    nmcli con up team0
    nmcli dev dis eth0
    nmcli dev dis eth1
    #+END_SRC
  - Verify
    #+BEGIN_SRC sh
    teamctl team0 state
    #+END_SRC
    
**** Create a Bridge Based on Network Teams
- Doesn't work with NetworkManager enabled
- Modify the team configuration file ifcfg-team0 and add
#+BEGIN_EXAMPLE
BRIDGE=brteam0
#+END_EXAMPLE
this will tell it to connect to the bridge device

- Make sure no IP configuration remains in the ifcfg-team0-port files
- Manually create a bridge file
#+BEGIN_EXAMPLE
DEVICE=brteam0
TYPE=Brigde
IPADDR0=192.168.122.100
PREFIX0=24
#+END_EXAMPLE

The man pages have examples
#+BEGIN_SRC sh
man 5 nmcli-examples
#+END_SRC

*** Configure networking services start at boot
- confirm that the the network service is running at boot
#+BEGIN_SRC sh
systemctl status network
systemctl list-units | grep network.target
systemctl list-dependencies multi-usr.target | grep network
#+END_SRC

- confirm that interface is set to come up at boot
#+BEGIN_SRC sh
cd /etc/sysconfig/network-scripts # this is where the configuration files are stored
nmcli con show # use this to find out the interface name
cat ifcfg-ens3
#+END_SRC
from the cat we are looking for the ONBOOT variable, and it needs to be set to yes

- set the ONBOOT variable to yes
#+BEGIN_SRC sh
nmcli con mod "ens3" connection.autoconnect yes
#+END_SRC

*** Internal Port Forwarding
- install firewalld
#+BEGIN_SRC sh
yum install -y firewalld
#+END_SRC

- enable and start the firewall
#+BEGIN_SRC sh
systemctl enable firewalld
systemctl start firewalld
#+END_SRC

- open the ssh port (so we don't get locked out)
#+BEGIN_SRC sh
firewall-cmd --permanent --add-port=22/tcp
#+END_SRC

- we will forward port 443 to 5901
#+BEGIN_SRC sh
firewall-cmd --permanent --add-forward-port=port433:proto=tcp:toport=5901
firewall-cmd --reload
#+END_SRC

** RHEL7 Logging
Service - Direct write ---> /so/log/.log
        - systemctl    ---> journald
	- rsyslogd     ---> /var/log/...
	  
journalctl can be set to write to rsyslog, this way all logs are kept in one logical area
  - it is also possible to have rsyslog write to journalctl
    
- Connection Journald to rsyslog
  - rsyslog messagees are sent ot jounald and vice versa
  - Sending to journal in rsyslog.conf (not enabled)
    #+BEGIN_EXAMPLE
    $Modload omjournal
    *.* :omjournal:
    #+END_EXAMPLE
  - Receiving from journal in rsyslog.conf (enabled)
    #+BEGIN_EXAMPLE
    $ModLoad imuxsock
    $OmitLocalLogging off
    #+END_EXAMPLE
    - in /etc/rsyslog.d/listend.conf
      #+BEGIN_EXAMPLE
      $SystemLogSocketName /run/systemd/journal/syslog
      #+END_EXAMPLE

- Modules
  - connecting rsyslog to journald goes through modules
  - Different modules are available
    - im*: input module
    - om*: output module
    - and others such as parser modules, messages modification modules and more
  - Module - Importing Text Files      
    #+BEGIN_EXAMPLE
    $ModLoad imfile
    $InputFileName /var/log/httpd/error_log
    $InputFileTag apache-error:
    $InputRunFileMonitor
    #+END_EXAMPLE
  - Module - Exporting to a Database
    #+BEGIN_EXAMPLE
    $ModLoad ommysql
    $ActionOmmysqlServerPort 1234
    *.* :ommysql:database-srvername,database-name,database-userid,database-password
    #+END_EXAMPLE
    
- Setting up Remote Logging
/etc/rsyslog.conf
- two methods
  - udp - best backwards compatiability
  - tcp - recommended (if all applications run tcp logging)

- setting remote host
#+BEGIN_EXAMPLE
*.* @@server1.example.com:514
#+END_EXAMPLE
@@ - tcp
@  - udp

** RHEL7 Firewall
*** Files
*** Cmds
**** firewalld
**** [[file://home/crito/org/tech/cmds/firewall-cmd.org][firewall-cmd]]

*** Usage
- Start service
#+BEGIN_SRC sh
systemctl start firewalld.service
#+END_SRC

- What is the current status
#+BEGIN_SRC sh
firewall-cmd --list-all
#+END_SRC

- What is the current zone
#+BEGIN_SRC sh
firewall-cmd 
#+END_SRC
    
- Change interface zone
#+BEGIN_SRC sh
firewall-cmd --zone=home --change-interface=eth0
#+END_SRC
  
- List of All Available Services
#+BEGIN_SRC sh
firewall-cmd --get-services
#+END_SRC

- the zone is set as public by default.

**** Setting Interface to a Zone Permanently
alter the ZONE variable in /etc/sysconfig/network-scripts/ifcfg-eth0
ZONE=home
**** To implement the new zone
Restart the network and firewall service
#+BEGIN_SRC sh
systemctl restart network.service
systemctl restart firewalld.service
#+END_SRC
Check the firewall properties
#+BEGIN_SRC sh
firewall-cmd --get-active-zones
#+END_SRC

**** Setting Rules for Applications
- Services are named and more details can be found about them by looking at the .xml files corresponding to the service found at /var/lib/firewalld/services
- Add a service with the --add-service parameter
#+BEGIN_SRC sh
firewall-cmd --zone=home --add-service=http
#+END_SRC
- the --permanent parameter needs to be set for it to come into effect on reboot.
  
**** Opening a Port for your Zones
- the --add-port parameter is used to set a port to a zone
#+BEGIN_SRC sh
firewall-cmd --zone=public --add-port=80/tcp
#+END_SRC
**** Opening a Port range
#+BEGIN_SRC sh
firewall-cmd --zone=public --add-port=4400-4450/udp
#+END_SRC
    
***** Defining a Service
- managing a service is easier than remembering ports and the associated ports
- copying one of the service xml files in /usr/lib/firewalld/services and using it as a template to define your own service
#+BEGIN_SRC sh
cp /usr/lib/firewalld/services/service.xml /etc/firewalld/services/example.xml
#+END_SRC
- to get access to your new service reload the firewall
#+BEGIN_SRC sh
systemctl restart firewalld.service
#+END_SRC

** SMTP Server on RHEL7
** rhel7 setting up an SMTP server
*** Cmds
[[file://home/crito/org/tech/cmds/postconf.org][postconf]]
*** Overview
[[file://home/crito/Pictures/org/mail_transfer_process.png][Image - Mail Transfer Process]]
*** Configuration Files
*** /etc/nsswitch.conf
Name Service Switch 
This file is used to indicate where to look for cetain information and what to do if this fails.
Each line specifies how to search for piece of information, and uses the following format.
#+BEGIN_SRC sh
info:method[action][method[action]...]
#+END_SRC
info - the type of information that the line describes
method - the method used to find the information
action - the response to be taken to the reply from the method

**** Information that nsswitch.conf Controls Searches For
- automount Automount (/etc/auto.master and /etc/auto.misc;)
- bootparams Diskless and other booting options (See the bootparam man page.)
- ethers MAC address
- group Groups of users (/etc/group;)
- hosts System information (/etc/hosts;)
- netgroup Netgroup information (/etc/netgroup;)
- networks Network information (/etc/networks)
- passwd User information (/etc/passwd;)
- protocols Protocol information (/etc/protocols;)
- publickey Used for NFS running in secure mode
- rpc RPC names and numbers (/etc/rpc;)
- services Services information (/etc/services;)
- shadow Shadow password information (/etc/shadow;) 

**** Methods
- files Searches local files such as /etc/passwd and /etc/hosts
- nis Searches the NIS database; yp is an alias for nis
- dns Queries the DNS (hosts queries only)
- compat ± syntax in passwd, group, and shadow files

**** Actions [[!]STATUS=action]
- STATUS
  - NOTFOUND—The method worked but the value being searched for was not found. Default action is continue.
  - SUCCESS—The method worked and the value being searched for was found; no error was returned. Default action is return.
  - UNAVAIL—The method failed because it is permanently unavailable. For example, the required file may not be accessible or the required server may be down. Default action is continue.
  - TRYAGAIN—The method failed because it was temporarily unavailable. For example, a file may be locked or a server overloaded. Default action is continue.
- values
  - return—Returns to the calling routine with or without a value.
  - continue—Continues with the next method. Any returned value is overwritten by a value found by the next method.

*** /etc/postfix/master.cf
**** Set up
***** Essential Parameters
inet_interfaces - what interfaces postfix with provide services on
myorigin - allows you to rewrite posted email to come from a specific domain instead of $myhostname
relayhost - specifies which central mail server to forward messages to
mydestination - domains handled by this server. Mail addressed to a domain not listed in mydestination is rejected
local_transport - specifies what to use for local mail delivery
inet_protocols - specifies which protocol to use to offer services
mynetworks - space-seperated list of networks that are allowed to relay

** CentOS 7 Mail Server
file://home/crito/org/tech/linux_concepts/centos7_mail_server.org

** Red Hat Identity Management(IdM) Solution

** RHEL7 Configuring a Cache-only DNS Server
files - /etc/unbound/unbound.conf

- install dns server
#+BEGIN_SRC sh
yum install unbound
#+END_SRC

- enable and start the service
#+BEGIN_SRC sh
systemctl enable unbound
systemctl start unbound
#+END_SRC

- create a config for unbound
#+BEGIN_EXAMPLE
interface: 0.0.0.0
access-control: 0.0.0.0/0 allow
forward-zone:
	name: "."
	forward-addr: 8.8.8.8
#+END_EXAMPLE
- listen of all interfaces
- allow all to use the dns server
- set up google as the forward zone (where the server will retrieve addresses it doesn't know)
  
- check the configuration
#+BEGIN_SRC sh
unbound-checkconf
#+END_SRC

- restart the unbound server
#+BEGIN_SRC sh
systemctl restart unbound
systemctl status -l unbound
#+END_SRC
also check the status, just to makesure no errors are being thrown

- Open the FW
#+BEGIN_SRC sh
firewall-cmd --permanent --add-service=dns
firewall-cmd --reload
#+END_SRC

** RHEL7 Configuring a Samba Server
*** Accessing Samba shares
- for working with samba you will need the utils
#+BEGIN_SRC sh
yum install cifs-utils
#+END_SRC

- smbclient
#+BEGIN_SRC sh
smbclient -L //localhost
#+END_SRC
will show all exports

- mounting a directory for smb share
#+BEGIN_SRC sh
mount -o username=guest //localhost/share /mnt
#+END_SRC

*** Samba Server Configuration
- Create the share on the Linux File System
- Grant Access Permissiions on the Linux File System
- Create the share in smb.conf
- Configure Security
- Consider Restrictions through smb.conf
- Start the Samba Server
  #+BEGIN_SRC sh
  systemctl start smb nmb
  systemctl enable smb nmb
  #+END_SRC

- Creating the Samba Share
#+BEGIN_SRC sh
mkdir /sambashare
chmod 777 /samabashare/
#+END_SRC
not secure but is ok for initial configuration

- Configuring smb.conf
  - confirm installation of samba
    #+BEGIN_SRC sh
    yum install samba samba-client
    #+END_SRC
  - edit Share definitions in /etc/smb.conf
    #+BEGIN_EXAMPLE
    [sambashare]
    	comment = my_share
	path = /sambashare
	public = yes
	writable = yes
	write list = +users
    #+END_EXAMPLE
    there are a few examples to help create the required share in the file
  - start the samba service
    #+BEGIN_SRC sh
    systemctl start smb
    systemctl enable smb
    #+END_SRC
  - confirm the samba service is running
    #+BEGIN_SRC sh
    systemctl status -L smb
    smbclient -L //localhost
    #+END_SRC
  - Create samba users
    #+BEGIN_SRC sh
    smbpasswd -a user_name
    #+END_SRC
    there needs to be a corresponding user on the linux system aswell
  - Mount the share
    #+BEGIN_SRC sh
    mount -o username=bob //localhost/sambashare /mnt
    #+END_SRC
    
- Tuning the share for access restrictions 
  - edit the smb.conf for ip access
    #+BEGIN_EXAMPLE
    hosts allow = 192.168.0
    #+END_EXAMPLE
    this will allow all ips in the 192.168.0.0/24 range
  or
  - firewalld could be used instead to samba, but choose only one method
    
  - wirte permissions smb.conf
    #+BEGIN_EXAMPLE
    write list = @users
    valid users = @users
    #+END_EXAMPLE
    only users in the users group can access and write to the share
  or
   - alternative option
     #+BEGIN_EXAMPLE
     read only = no
     #+END_EXAMPLE
     this will use the linux system to decide who has privs
     #+BEGIN_EXAMPLE
     read only = yes
     #+END_EXAMPLE
     no one can write to the share

- Verifying the Configuration
#+BEGIN_SRC sh
testparm
#+END_SRC
will throw an error if any is present in smb.conf

- SELinux Configuration
  - add all service man pages and update the man pages
    #+BEGIN_SRC sh
    yum whatprovides */sepolicy
    yum install policycoreutils-devel
    sepolicy manpage -a -p /usr/share/man/man8
    mandb -c
    man -k _selinux
    #+END_SRC
    this will provide a list of selinux service policies
    
  - find samba policy
    #+BEGIN_SRC sh
    man -k _selinux | grep samba
    #+END_SRC
    this will provide you with the man page that will help you configure selinux for samba
    
  - setting the selinux labels
    - only samaba share
      #+BEGIN_SRC sh
      ls -dZ /sambashare
      semanage fcontext -a -t samba_share_t "/sambashare(/.*)?"
      restorcon -R -v /sambashare/
      geetenforce
      setenforce 1
      #+END_SRC
    - view all available boolians
      #+BEGIN_SRC sh
      getsebool -a | grep samba
      #+END_SRC
      
- Open the FW
#+BEGIN_SRC sh
firewall-cmd --permanent --add-service=samba
firewall-cmd reload
#+END_SRC
you may also need samba-client service    

** RHEL7 Setting up an SMTP Server (RHCE)
- Understanding Server Roles
  - Email transmission - SMTP
  - Email reception - POP, IMAP
  - Email Client - mutt, evolution etc
    - users also run Postfix but as a null client.
      
- Understanding Postfix Configuration
  - relaying - mail is sent to an outgoing mail server for further processing
    - DNS MX records are used to look up the mail server for the recipient domain.

*** Configuring Postfix for Mail Reception
  - /etc/postfix/
    - master.cf - this is where postfix processes are called from
    - main.cf - this is used to control the entire configuration
      - inet_interface  - this variable is what postfix will listen on
      - myorigin        - this should be set to the domain
      - relayhost       - the server to forward mail to for further processing (if the host is in [] this means dns doesn't need to be done)
      - mydestination   - who's mail should the server accept (these domains end with a full stop example.com. )
      - local_transport - what protocols to use for local mail delivery
      - mynetworks      - what networks the mail server will accept connects from
      - inet_protocols  - this is set to all by default, this may cause issues if ipv6 has not been configured. If only on an ipv4 network change this to ipv4.
	
- useful cmds
#+BEGIN_SRC sh
postconf
#+END_SRC
this will print to the screen all variables and values of the postfix config

#+BEGIN_SRC sh
postconf inet_interfaces
#+END_SRC
this will print the specific key-value pair of the requested variable (here it would be the inet_interfaces)

#+BEGIN_SRC sh
postconf -e 'myorigin = example.com'
#+END_SRC
this will alter the current value of the variable (myorigin will be example.com)

#+BEGIN_SRC sh
postqueue -p
#+END_SRC
which messages are still to be 

#+BEGIN_SRC sh
postqueue -f
#+END_SRC
this will flush the current queue

*** Understanding Postfix Maps
- /etc/postfix has additional config files to add extra functionality
- use cmd postmap [filename]
  - access    - configures access restrictions
    #+BEGIN_EXAMPLE
    192.168.122.101 OK
    192.168.100 REJECT
    #+END_EXAMPLE
  - canonical - contains alias configuration
    #+BEGIN_EXAMPLE
    jim		jim@somewhere.com
    @somewhere.com	@example.com
    #+END_EXAMPLE
  - relocated - gives information about moved users
    #+BEGIN_EXAMPLE
    jim@example.com 	jim@somewhere.com
    #+END_EXAMPLE
  - virtual   - forwards mail to specific users
    #+BEGIN_EXAMPLE
    frank@example.com 	root
    #+END_EXAMPLE
 
** How to Install Xfce on CentOS7
url: https://www.rootusers.com/how-to-install-xfce-gui-in-centos-7-linux/

- Ensure that the epel repo is installed
#+BEGIN_SRC sh
yum install epel-release -y
#+END_SRC

- Add the group package "Server with GUI", this will install Gnome
#+BEGIN_SRC sh
yum groupinstall "Server with GUI" -y
#+END_SRC

- Install xfce
#+BEGIN_SRC sh
yum groupinstall "xfce" -y
#+END_SRC

- Remove xfce
#+BEGIN_SRC sh
yum groupremove "xfce"
#+END_SRC

** REL7 Time services
*** Cmds
[[file://home/crito/org/tech/cmds/timedatectl.org][timedatectl]]
chronyd

*** setting system clock
- available timezones
#+BEGIN_SRC sh
timedatectl list-timezones
#+END_SRC

- if unsure of what timezone to use run tzselect. This will guide you through questions to findout what your timezone should be using
  
- Once you have the timezone you would like to use it needs to be set
#+BEGIN_SRC sh
timedatectl set-timezone Europe/London
#+END_SRC

*** Setting ntpd
RHEL uses chronyd to configure ntp

- confirm that chronyd is running
#+BEGIN_SRC sh
systemctl status chronyd
#+END_SRC

- we can use the chronyc cmd to interact with chronyd
#+BEGIN_SRC sh
chronyc sources -v
#+END_SRC
this will show our current NTP sources

- we can find out the machine that we are currently using as our ntp source with
#+BEGIN_SRC sh
chronyc tracking
#+END_SRC

- change the ntp source, any changes made will require that the service is restarted
/etc/chrony.conf
#+BEGIN_EXAMPLE
server 0.rhel.pool.ntp.org iburst
server 1.rhel.pool.ntp.org iburst
server 2.rhel.pool.ntp.org iburst
server 3.rhel.pool.ntp.org iburst
#+END_EXAMPLE
these can be replaced with different machines
iburst - after restart will send 4 measurements in a short time period

** Change the default kernel to boot
- This will print out all available options (numbering starts from 0)
#+BEGIN_SRC sh
awk -F\' /^menuentry/{print\$2} /etc/grub2.cfg
#+END_SRC
or
#+BEGIN_SRC sh
yum list kernel
#+END_SRC

2. Selecting a new boot option
#+BEGIN_SRC sh
grub-set-default 1
#+END_SRC
This will select the second line printed with above command as the default boot option

3. Confirm the defualt option has been selected
#+BEGIN_SRC sh
cat /boot/grub/grubenv
#+END_SRC
This will show the new option as the saved_entry=<new_option>

4. Reboot system for change to take effect

** RHEL7 KDC Server Setup (kerberos)
- install required components
#+BEGIN_SRC sh
yum install -y krb5-server krb5-workstation pam_krb5
#+END_SRC

- edit the file to use your domain
/var/kerberos/krb5kdc/kdc.conf
#+BEGIN_EXAMPLE
[realms]
MYLABSERVER.COM = {
#+END_EXAMPLE
to force kerberos 5 uncomment and add the next two lines
#+BEGIN_EXAMPLE
master_key_type = aes256-cts
default_principal_flags = +preauth
#+END_EXAMPLE

- edit the file to use the your domain
/etc/krb5.conf
#+BEGIN_EXAMPLE
default_realllm = MYLABSERVER.COM

[realms]
 MYLABSERVER.COM = {
 kdc = alickmitchell1.mylabserver.com
 admin_server = alickmitchell1.mylabserver.com
 }

[domain_realm]
 .mylabserver.com = MYLABSERVER.COM
 mylabserver.com = MYLABSERVER.COM
#+END_EXAMPLE

/var/kerberos/krb5kdc/kadm5.acl
#+BEGIN_EXAMPLE
*/admin@MYLABSERVER.COM
#+END_EXAMPLE
When editing the last three files always use the case that you replace with

- create the database for the domain MYLABSERVER
#+BEGIN_SRC sh
kdb5_util create -s -r MYLABSERVER.COM
#+END_SRC
This may take a few minutes

- you will be prompted for a master key password

- Start and enable the services
#+BEGIN_SRC sh
systemctl enable krb5kdc kadmin
systemctl start krb5kdc kadmin
#+END_SRC

- run kadmin
#+BEGIN_SRC sh
kadmin.local
#+END_SRC
this will drop you into kadmin
  - first thing set the kadmin root password
#+BEGIN_EXAMPLE
kadmin.local: addprinc root/admin
#+END_EXAMPLE
this will prompt you to set the password

- set a principle called krbtest and set a key for your kerberos server
#+BEGIN_EXAMPLE
kadmin.local: addprinc krbtest
kadmin.local: addprinc -randkey host/alickmitchell1.mylabserver.com
#+END_EXAMPLE

- save all that we created in a file in /etc
#+BEGIN_EXAMPLE
kadmin.local: ktadd host/alickmitchell1.mylabserver.com
#+END_EXAMPLE

- confirm that a keytab file has been created in /etc 
#+BEGIN_SRC sh
ls -al *keytab
#+END_SRC

- uncomment 
/etc/ssh/ssh_config
#+BEGIN_EXAMPLE
GSSAPIAuthentication yes
GSSAPIDelegateCredentials yes
#+END_EXAMPLE

- reload sshd
#+BEGIN_SRC sh
systemctl reload sshd
#+END_SRC

- update the kerberos authentication config
#+BEGIN_SRC sh
authconfig --enablekrb5 --update
#+END_SRC

- open required ports on firewall using an xml file
/etc/firewalld/services/kerberos.xml
#+BEGIN_SRC sh
<?xml version="1.0" encoding="utf-8"?>
<service>
  <short>Kerberos</short>
  <description>Kerberos network authentication protocol server</description>
  <port protocol="tcp" port="88"/>
  <port protocol="udp" port="88"/>
  <port protocol="tcp" port="749"/>
</service
#+END_SRC

- Now apply the above config file
#+BEGIN_SRC sh
firewall-cmd --permanent --add-service=kerberos
firewall-cmd --reload
#+END_SRC

- test configuration usign the krbtest
#+BEGIN_SRC sh
su - krbtest
kinit
ssh alickmitchell1.mylabserver.com
#+END_SRC
you should now connect with kerberos authenticating the krbtest user

** RHEL7 KDC Client Setup
- Kerberos requires FQDN
  
- install packages
#+BEGIN_SRC sh
yum install -y krb5-workstation pam_krb5
#+END_SRC

- move config file to bakup name and copy config from server(this file will be a copy of the servers version)
/etc/krb5.conf
#+BEGIN_SRC sh
mv krb5.conf krb5.conf.orig
scp user@alickmitchell1:/etc/krb5.conf /etc/
#+END_SRC

- create a user to use against the KDC server
#+BEGIN_SRC sh
useradd krbtest
#+END_SRC

- setup the user
#+BEGIN_SRC sh
kadmin
#+END_SRC
You'll be prompted for the root password of the KDC server
#+BEGIN_EXAMPLE
kadmin: addprinc -randkey host/alickmitchell3.mylabserver.com
kadmin: ktadd host/alickmitchell3.mylabserver.com
#+END_EXAMPLE

- edit the ssh config
/etc/ssh/ssh_config
#+BEGIN_EXAMPLE
GSSAPIAuthentication yes
GSSAPIDelegateCredentials yes
#+END_EXAMPLE

- reload ssh
#+BEGIN_SRC sh
systemctl reload sshd
#+END_SRC

- update config
#+BEGIN_SRC sh
authconfig --enablekrb5 --update
#+END_SRC

- test with krbtest user
#+BEGIN_SRC sh
su - krbtest
kinit
klist
ssh alickmitchell1.mylabserver.com
#+END_SRC
** RHEL7 iSCSI Target
- install packages
#+BEGIN_SRC sh
yum install -y targetcli
#+END_SRC

- enable service
#+BEGIN_SRC sh
systemctl enable target
#+END_SRC

- decide on storage, Block IO or file images (two options for providing storage with iSCSI block, or create file images)

- drop into targetcli
#+BEGIN_SRC sh
targetcli
#+END_SRC
- if using a logical volume
#+BEGIN_EXAMPLE
/> backstores/block/ create testblock1 /dev/vg/lv_test1
#+END_EXAMPLE
- if using a physical volume
#+BEGIN_EXAMPLE
/> backstores/block/ create testblock1 /dev/xvdf
#+END_EXAMPLE

- create iSCI qualified name
#+BEGIN_EXAMPLE
/> iscsi/ create iqn.2018-04.com.mylabserver:target1
#+END_EXAMPLE

- explore the creted
#+BEGIN_EXAMPLE
/> isci/iqn.2018-04.com.mylabserver:target1/tpg1/
#+END_EXAMPLE

- create the LUN
#+BEGIN_EXAMPLE
/> luns/ create /backstores/block/testblock1
#+END_EXAMPLE

- create the node ACL and mapped LUN
#+BEGIN_EXAMPLE
/> acls/ create iqn.2018-04.com.mylabserver:client
/> cd acls/iqn.2018-04.com.mylabserver:client/
/> set auth userif=lunuser
/> set auth password=secret
#+END_EXAMPLE
on quiting this will crreate a json file in /etc/target

- configure the firewall to allow the iSCI traffic
#+BEGIN_SRC sh
firewall-cmd --permanent --add-port=3260/tcp
firewall-cmd --reload
#+END_SRC

- start the service
#+BEGIN_SRC sh
systemctl start target
#+END_SRC

** RHEL7 iSCSI Initiator
- install packages
#+BEGIN_SRC sh
yum install -y iscsi-initiator-utils
#+END_SRC

- add the iqn
/etc/iscsi/initiatorname.isci
#+BEGIN_EXAMPLE
InitiatorName=iqn.2018-04.com.mylabserver:client
#+END_EXAMPLE

- uncomment and change as needed these three lines
/etc/iscsi/iscsid
#+BEGIN_EXAMPLE
node.session.auth.authmethod = CHAP

node.sesseion.auth.username = lunuser
node.sesseion.auth.password = secret
#+END_EXAMPLE

- start and enable the service
#+BEGIN_SRC sh
systemctl enable iscsi
systemctl start iscsi
#+END_SRC

- connect to server
#+BEGIN_SRC sh
iscsiadm --mode discovery --type sendtargets --portal 172.31.51.244
#+END_SRC

- run iscsiadm in node mode
#+BEGIN_SRC sh
iscsiadm --mode node --targetname iqn.2018-04.com.mylabserver:target1 --portal172.31.51.244 --login
#+END_SRC

- view available block storage
#+BEGIN_SRC sh
lsblk
#+END_SRC
the available iSCSI will be shown here

- format the the iSCSI volume as ext4
#+BEGIN_SRC sh
mkfs.ext4 /dev/sdc
#+END_SRC

- mount the file and add to fstab
#+BEGIN_SRC sh
blkid | grep "/dev/sdc"
mkdir /mnt/iscsi
#+END_SRC
this will give us the uuid
/etc/fstab
#+BEGIN_EXAMPLE
UUID=d6ba4633-65dx-43sd-bis3-7sid04ls8dw5g	/mnt/iscsi	ext4	_netdev	0 0
#+END_EXAMPLE

- mount the iSCSI filesystem
#+BEGIN_SRC sh
mount -a
#+END_SRC

- confirm that the filesystem has been mounted
#+BEGIN_SRC sh
isciadm -m session -P 3
#+END_SRC
this will provide information on the iSCSI mount

** RHEL7 Installing and Configuring Apache
- install httpd and elinks(just to access the server over http)
#+BEGIN_SRC sh
yum update
yum install httpd elinks
#+END_SRC

- start and enable httpd
#+BEGIN_SRC sh
systemctl start httpd
systemctl enable httpd
#+END_SRC

- add the firewalld rules for http and https
#+BEGIN_SRC sh
firewall-cmd --permanent --add-service=http
firewall-cmd --permanent --add-service=https
firewall-cmd --reload
#+END_SRC

- connect to httpd with elinks
#+BEGIN_SRC sh
elinks http://localhost
#+END_SRC

* Trouble-shooting
** Installation of the kernel headers but yum can't find "kernel-devel" package
- Installing IdM and needed the kernel headers.
  - yum was telling me that there wasn't a package known as "kernel-devel"
  - check in /etc/yum.conf
    #+BEGIN_EXAMPLE
    exclude=kernel*
    #+END_EXAMPLE
    if present comment out and update yum
  - kernel-devel should now be available

* Package Management
[[file://home/crito/Documents/Linux/RHEL/yum_cheatsheet.pdf][YUM Command Cheat Sheet]]
** Files
/etc/yum.conf  - this is the configuration file for the yum tool, repo definitions may be contained in here, but should be in /etc/yum.repos.d
/etc/yum.repos.d/ - this is where repos can be added
/var/cache/yum - temp files for package installation are stored here
/var/log/yum.log - this is the yum log, this contains what pkgs have been installed or removed
/var/cache/yum/x86_64/X/ - this is where downloaded rpm's are stored
/var/lib/rpm - this is where all the rpm database files are kept
/var/lib/rpm/__db00X - rpm database file

** Cmds
*** rpm
http://repoforge.org/

- when installing a new kernel never use the -U as this will remove the previous kernel

**** Basic Actions
- List of all installed packages
#+BEGIN_SRC sh
rpm -qa
#+END_SRC
q - query the database
a - all

- Show any changes since installation
#+BEGIN_SRC sh
rpm -Va
#+END_SRC

- import any publickeys that are missing
#+BEGIN_SRC sh
rpm -qa gpg-pubkey*
#+END_SRC

- view requirements of an rpm file
#+BEGIN_SRC sh
rpm -qpR nmap-6.40-7.el7.x86_64.rpm
#+END_SRC

- give me infomation on an application that isn't installed
#+BEGIN_SRC sh
rpm -qip telnet-0.17-48.el6.x86_64.rpm
#+END_SRC
the long name is required if the application isn't installed

- show requirements/dependencies
#+BEGIN_SRC sh
rpm -qRp telnet-0.17-48.el6.x86_64.rpm
#+END_SRC

- install application ignoring dependencies
#+BEGIN_SRC sh
rpm -ivh --nodeps mysql-server-5.1.73-8.el6_8.x86_64
#+END_SRC

- insall application
#+BEGIN_SRC sh
rpm -ivh xterm-295.3.el7.x86_64.rpm
rpm -Uvh xterm-295.3.el7.x86_64.rpm
#+END_SRC
the second version will update if present or install if not present
h - hash (progress of the install)

- install application, but check if it is newer than the already installed version
#+BEGIN_SRC sh
rpm -Fvh elinks-0.12-0.37.pre6.el7.x86_64.rpm
rpm --freshen -vh elinks-0.12-0.37.pre6.el7.x86_64.rpm
#+END_SRC

- is a package installed
#+BEGIN_SRC sh
rpm -q openssh-server
#+END_SRC

- what packages were installed with a package
#+BEGIN_SRC sh
rpm -ql opwnssh-server
#+END_SRC

- remove a package
#+BEGIN_SRC sh
rpm -evv nmap
#+END_SRC

- query package documentation
#+BEGIN_SRC sh
rpm -qdf /usr/bin/vmstat
#+END_SRC
this will list all the documentation where the package is mentioned

- is package database cache becomes corrupt
#+BEGIN_SRC sh
rpm --rebuilddb
#+END_SRC

- Verify the signature on a package
#+BEGIN_SRC sh
rpm --checksig
#+END_SRC

**** Repo Administration
Adding a repo
#+BEGIN_SRC sh
wget http://rpms.famillecollet.com/enterprise/remi-release-6.rpm
rpm -Uvh remi-release-6*.rpm
#+END_SRC
In this example we are downloading the remi repo

- Find package binary is associated with
#+BEGIN_SRC sh
rpm -qf /sbin/chronyd
#+END_SRC

- Find all packages that are associated with a binary
#+BEGIN_SRC sh
rpm -ql chrony
#+END_SRC
this will provide a list of all the files

- Find the configuration files of a binary
#+BEGIN_SRC sh
rpm -qc chrony
#+END_SRC

- Find all documentation that is stored for a binary
#+BEGIN_SRC sh
rpm -qd chrony
#+END_SRC

- Check the installation script of an rpm
  - already installed
  #+BEGIN_SRC sh
  rpm -q --scripts http
  #+END_SRC
  This allows us to check the installation script of a package
  
  - before installation
  Download the rpm from the repo
  #+BEGIN_SRC sh
  rpm -qp --scripts the_none_veri_pkg.rpm
  #+END_SRC
  qp - query package

- Query repo for package
#+BEGIN_SRC sh
repoquery -ql yp-tools
#+END_SRC

***** Exclude Specfic Repository
Get repo list
#+BEGIN_SRC sh
yum repolist
#+END_SRC

****** Method One - Temporary
- disable
#+BEGIN_SRC sh
yum-config-manager --disabue dl.fedoraproject.org_pub_epel_7_x86_64
#+END_SRC

- re-enable
#+BEGIN_SRC sh
yum-config-manager --enable dl.fedoraproject.org_pub_epel_7_x86_64
#+END_SRC

****** Method Two - Permanent
Edit the repo files in /etc/yum.repos.d
set the enable parameter to 0.

****** remove a repo for an update
#+BEGIN_SRC sh
yum update --disablerepo=isu 
#+END_SRC
This will not upgrade the packages that belong to the given repo.

***** Remove a repository
#+BEGIN_SRC sh
rm -rf /etc/yum.repo.d/dl.fedoraproject.org_pub_epel_7_x86_64_.repo
#+END_SRC

***** Creating a local repository
- mount the rhel7 iso
#+BEGIN_SRC sh
mkdir -p /repos/local
mount -o loop rhel-server-7.1-x86_64-dvd.iso /repos/local
#+END_SRC
loop - allows the system to read the cdrom as a block device

- disable/remove the rhel repo
#+BEGIN_SRC sh
rm /etc/yum.repo.d/redhat-rhui*
#+END_SRC

- create the local repository
/etc/yum.repo.d/local-repo
#+BEGIN_EXAMPLE
[local-repo]
name=Red Hat Linux Local Repo
baseurl=file:///repos/local
enable=1
gpgcheck=0
#+END_EXAMPLE

- confirm that the new repo has been added
#+BEGIN_SRC sh
yum repolist
#+END_SRC
it should be listed

- confirm that an application can be pulled from the repo
#+BEGIN_SRC sh
yum install emacs
#+END_SRC

***** Configuring gpg keys for repo
- install the repo
#+BEGIN_SRC sh
yum-config-manager --add-repo http://dl.fedoraproject.org/pub/epel/7/x86_64/
#+END_SRC

- go to the the repo website and get the url for the gpg key
  - http://dl.fedoraproject.org/pub/epel

- edit the /etc/pki/rpm-gpg
#+BEGIN_SRC sh
wget http://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-7
#+END_SRC
you don't have to store the key here, but it's best practices

- edit the repo in etc/yum.repos.d that was created by yum-config-manager
add
#+BEGIN_EXAMPLE
gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-7
#+END_EXAMPLE

- confirm by installing package and you will be asked if the gpg-key is ok to use

***** EPEL (Extra Packages for Enterprise Linux)
Centos >=7
#+BEGIN_SRC sh
yum install epel-release
#+END_SRC

Centos <=6
#+BEGIN_SRC sh
wget http://download.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm
rpm -ivh epel-release-6-8.noarch.rpm
#+END_SRC

***** IUS (Inline with Upstream Stable)
#+BEGIN_SRC sh
wget https://centos7.iuscommunity.org/ius-release.rpm
rpm -Uvh ius-release.rpm
yum repolist
#+END_SRC

*** yum
CheatSheet: [[file://home/crito/Documents/Linux/RHEL/yum_cheatsheet.pdf][YUM CheatSheet]]
**** Basic Administration
- Install application
#+BEGIN_SRC sh
yum install nmap
#+END_SRC

- Remove application
#+BEGIN_SRC sh
yum remove nmap
yum erase nmap
#+END_SRC

- autoremove application (similar to purge on deb)
#+BEGIN_SRC sh
yum autoremove nmap
#+END_SRC

- upgrade all packages on the sysystem
#+BEGIN_SRC sh
yum update
yum upgrade
#+END_SRC

- Install a downloaded rpm
#+BEGIN_SRC sh
yum --nogpgcheck localinstall dl_pkg.rpm
#+END_SRC
this will use the repo list to check for deps

- List all installed packages
#+BEGIN_SRC sh
yum list installed
#+END_SRC
use grep to narrow the search window

- list the dependencies of a package
#+BEGIN_SRC sh
yum deplist httpd
#+END_SRC
this will return the dependencies of the httpd

- list all information on a package
#+BEGIN_SRC sh
yum info tmux
#+END_SRC

- clean out the /var/cache/yum directory
#+BEGIN_SRC sh
yum clean all
#+END_SRC

- enable a repo for a single transaction
#+BEGIN_SRC sh
yum install --enablerepo centosplus postfix
#+END_SRC

- Download the rpm but don't install
#+BEGIN_SRC sh
yum install --downloadonly telnet
#+END_SRC
this will download the rpm to the /var/cache/yum/x86_64/X/base/packages

- Download the rpm to a specific directory
#+BEGIN_SRC sh
yumdownloader --destdir /root telnet
#+END_SRC

- Download the rpm plus dependencies
#+BEGIN_SRC sh
yumdownloader --resolve postfix
#+END_SRC

- Download the source for an application
#+BEGIN_SRC sh
yumdownloader --source postfix
#+END_SRC

- View yum history
#+BEGIN_SRC sh
yum history
#+END_SRC

- view information about action in history
#+BEGIN_SRC sh
yum history info 17
#+END_SRC
this will provide information such as what was in installed, removed etc

- Remove a package using history
#+BEGIN_SRC sh
yum history undo 17
#+END_SRC
17 - being the index of the package to remove in the yum history

**** Repo Administration
- list all enabled repos
#+BEGIN_SRC sh
yum repolist
#+END_SRC

- list all enabled and disabled repos
#+BEGIN_SRC sh
yum repolist all
#+END_SRC

- adding a repo with yum (yum-config-manager requires yum-utils package)
#+BEGIN_SRC sh
yum-config-manager --add-repo=http://dl.fedoraproject.org/pub/epel/7/x86_64
#+END_SRC
this will create the repo file in /etc/yum.repo.d/ for the repository

- disable a repo
#+BEGIN_SRC sh
yum-config-manager --disable dl.fedoraproject.org_pub_epel_7_x86_64_
#+END_SRC

**** Check for system wide upgrades
- check what has an available update     
#+BEGIN_SRC sh
yum check-update
#+END_SRC
this will list all packages that have an available update

- these will go out and pull all updates for the system
#+BEGIN_SRC sh
yum update
#+END_SRC
or
#+BEGIN_SRC sh
yum upgrade
#+END_SRC

**** Search for application
#+BEGIN_SRC sh
yum search nmap
#+END_SRC

- too search for an earlier version
#+BEGIN_SRC sh
yum list --show-duplicates jenkins
#+END_SRC

- Know the binary but not the package
#+BEGIN_SRC sh
yum whatprovides */semanage
#+END_SRC
the */ is to indicate to search for a filename semanage

- list all available packages
#+BEGIN_SRC sh
yum list
#+END_SRC

**** Group Packages
= indicates what is installed as part of the package
- indicates the package is not installed will not be installed if the group is installed
***** Search Group Packages
#+BEGIN_SRC sh
yum grouplist
#+END_SRC

***** Install Package
#+BEGIN_SRC sh
yum groupinstall $GROUP 
#+END_SRC

**** yum-utils
***** Installation
#+BEGIN_SRC sh
yum update && yum install yum-utils
#+END_SRC
***** Find Repo of Installed Pkg
#+BEGIN_SRC sh
find-repo-of-installed httpd
#+END_SRC
***** Remove Duplicate or Ophaned Package
#+BEGIN_SRC sh
package-cleanup --orphans
package-cleanup --oldkernels
#+END_SRC
***** Find out Package dependency lists
#+BEGIN_SRC sh
repo-graph --repoid=updates | less
#+END_SRC
This will print out put all package dependencies format
"libvirt-daemon-driver-nwfilter" -> {
"libnl3"  -- dependent pkg
"glibc"   -- dependent pkg
"libvirt-daemon"
} [color="0.578260869565 0.678260869565 1.0"];

***** Check list of unresolved dependencies
#+BEGIN_SRC sh
repoclosure
#+END_SRC

***** Query Yum for information on package
#+BEGIN_SRC sh
repoquery --requires htop
#+END_SRC

***** Dump all installed RPM Pkgs into Zip file
#+BEGIN_SRC sh
yum-debug-dump
#+END_SRC

***** Restore the dump file
#+BEGIN_SRC sh
yum-debug-restore yum_debug_dump-localhost.localdomain-2017-02-24_20:59:05.txt.gz
#+END_SRC

***** Fix Unfinished or Aborted Yum Transactions
#+BEGIN_SRC sh
yum-complete-transaction --cleanup-only
yum update
#+END_SRC
Incomplete transactions can be found in /var/lib/yum/transaction-all* and transaction-done*

**** Update to a minor version
#+BEGIN_SRC sh
yum --releaserver=7.3 update
#+END_SRC
this will update the current install to 7.3

**** Download only the rpm
#+BEGIN_SRC sh
yumdownloader nmap
#+END_SRC
this will just download the nmap rpm
*** dnf
**** Basic Administration					   :rhel:dnf:
- Install application
#+BEGIN_SRC sh
dnf install vim
#+END_SRC

- Remove application
#+BEGIN_SRC sh
dnf remove vim
#+END_SRC

- Search for application
#+BEGIN_SRC sh
dnf search vim
#+END_SRC

- Check for available updates
#+BEGIN_SRC sh
dnf check-update
#+END_SRC

- Upgrade All Software to Newest Version
#+BEGIN_SRC sh
dnf upgrade
#+END_SRC

- Upgrade a specific package
#+BEGIN_SRC sh
dnf upgrade vim
#+END_SRC

** Create a local repository for CentOS6 (for local updates)
- apache needs to be installed
#+BEGIN_SRC sh
yum install httpd
mkdir -p /var/www/html/repos/centos/6/7
#+END_SRC

- makesure that "direcotry browsing" is not turned off in "/var/www/html" directory config in httpd.conf
  - Should look similar to this
    #+BEGIN_EXAMPLE
    Options Indexes FollowSymlinks MultiViews ExecCGI
    AllowOverride None
    Order allow,deny
    allow from all
    #+END_EXAMPLE
    the directory browsing option is the "Indexes". Makesure that a - isn't infront, as this negates the option(same as removing it).
    
- create an index file /www/html/
#+BEGIN_EXAMPLE
Centos 6.7 Local Network Repository

Browse to http://192.168.1.135/repos/centos/os/6/7
#+END_EXAMPLE

- add the createrepo tool
#+BEGIN_SRC sh
yum update
yum install craterepo
#+END_SRC

- build the local repo
#+BEGIN_SRC sh
createrepo /var/www/html/repos/centos/6/7
#+END_SRC
this updates the sqlitedb for the repos

- select the mirror that will allow us to download over http and rsync
  - centos.org/downloads/mirrors
  - check the mirror has the correct options
    
- create the rsync
#+BEGIN_SRC sh
rsync -avz rsync://mirrors.usinternet.com/centos/6.7/os/x86_64/ /var/www/html/centos/6/7/
#+END_SRC
this will pull down all the required files

- update
#+BEGIN_SRC sh
createrepo --update /var/www/html/repos/centos/6/7/
#+END_SRC
this updates the local sqlitedb of the repo

*** Configure a machine to update using a local repository
    
- move all files in the /etc/yum.repos.d/ to a backup directory
#+BEGIN_SRC sh
mv /etc/yum.repos.d/* /root/repo_backup/
#+END_SRC

- configure a file called /etc/yum.repos.d/local_repo.repo
#+BEGIN_EXAMPLE
[local_repo]
name=Local Repo
baseurl=http://192.168.1.135/repos/centos/6/7/
gpgcheck=1
gpgkey=http://mirror.centos.org/centos/RPM-GPG-key-CentOS-6
#+END_EXAMPLE

- now update the machine
#+BEGIN_SRC sh
yum update
#+END_SRC

- to confirm that the local repo is being used, run a query on an application
#+BEGIN_SRC sh
yum info git
#+END_SRC
the repo option should be "Local_Repo"

** Update the kernel package
*** automated
- list the current kernel and available kernels
#+BEGIN_SRC sh
yum clean all
yum list kernel
#+END_SRC
this will printout the current kernel and available kernels

- install an available new kernel
#+BEGIN_SRC sh
yum update kernel
#+END_SRC

*** Manual method
- list the current kernel and available kernels
#+BEGIN_SRC sh
yum clean all
yum list kernel
#+END_SRC
this will printout the current kernel and available kernels

- download the available kernel
#+BEGIN_SRC sh
yumdownloader kernel
#+END_SRC

- install the new kernel
#+BEGIN_SRC sh
rpm-ivh kernel-3.10.0-229.1.2.el7.x86_64.rpm
#+END_SRC
this may issue dependency issues, these will need to be installed before you can install the kernel

- confirm that the initramfs has been created in /boot/initramfs-xxx, if not then create
#+BEGIN_SRC sh
dracut
#+END_SRC

- confirm by reboot and check that grub has the new kernel available

** Common Repos
*** EPEL
HomePage: https://fedoraproject.org/wiki/EPEL
Extra Packages for Enterprise Linux (or EPEL) is a Fedora Special Interest Group that creates, maintains, and manages a high quality set of additional packages for Enterprise Linux, including, but not limited to, Red Hat Enterprise Linux (RHEL), CentOS and Scientific Linux (SL), Oracle Linux (OL).

- Install RHEL7
#+BEGIN_SRC sh
sudo yum localinstall --nogpgcheck http://dl.fedoraproject.org/pub/epel/7/x86_64/Packages/e/epel-release-7-11.noarch.rpm
#+END_SRC

- Install RHEL6
#+BEGIN_SRC sh
sudo yum localinstall --nogpgcheck  http://dl.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm
#+END_SRC

*** RPMFusin
HomePage: https://rpmfusion.org/
RPM Fusion provides software that the Fedora Project or Red Hat doesn't want to ship. That software is provided as precompiled RPMs for all current Fedora versions and current Red Hat Enterprise Linux or clones versions; you can use the RPM Fusion repositories with tools like yum and PackageKit

- Install RHEL7
#+BEGIN_SRC sh
yum localinstall --nogpgcheck https://download1.rpmfusion.org/free/el/rpmfusion-free-release-7.noarch.rpm 
yum localinstall --nogpgcheck https://download1.rpmfusion.org/nonfree/el/rpmfusion-nonfree-release-7.noarch.rpm
#+END_SRC

- Install RHEL6
#+BEGIN_SRC sh
yum localinstall --nogpgcheck https://download1.rpmfusion.org/free/el/rpmfusion-free-release-6.noarch.rpm
yum localinstall --nogpgcheck https://download1.rpmfusion.org/nonfree/el/rpmfusion-nonfree-release-6.noarch.rpm
#+END_SRC

- Install Fedora
#+BEGIN_SRC sh
dnf install https://download1.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm -E %fedora).noarch.rpm
dnf install https://download1.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-$(rpm -E %fedora).noarch.rpm
#+END_SRC

*** Remi's RPM Repository
HomePage: http://rpms.famillecollet.com/
REMI is also a useful yum repository contains updated packages for Enterprise Linux systems. Use the following commands to install REMI yum repository on your CentOS/RHEL 7/6 and Fedora 27/26/25/24 systems.

- Install RHEL7
#+BEGIN_SRC sh
yum localinstall --nogpgcheck http://rpms.famillecollet.com/enterprise/remi-release-7.rpm
#+END_SRC

- Install RHEL6
#+BEGIN_SRC sh
yum localinstall --nogpgcheck http://rpms.famillecollet.com/enterprise/remi-release-6.rpm
#+END_SRC

*** ELRepo Repository
HomePage: https://elrepo.org/tiki/tiki-index.php
ELRepo is an RPM repository for Enterprise Linux packages.It supports Red Hat Enterprise Linux (RHEL) and its derivatives like CentOS, Scientific Linux etc. This Project focuses on hardware related packages to enhance your experience with Enterprise Linux. This includes filesystem drivers, graphics drivers, network drivers, sound drivers, webcam and video drivers.

- Install RHEL7
#+BEGIN_SRC sh
rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org
rpm -Uvh http://www.elrepo.org/elrepo-release-7.0-3.el7.elrepo.noarch.rpm
#+END_SRC

- Install RHEL6
#+BEGIN_SRC sh
rpm --import https://www.elrepo.org/RPM-GPG-KEY-elrepo.org
rpm -Uvh  http://www.elrepo.org/elrepo-release-6-8.el6.elrepo.noarch.rpm
#+END_SRC

*** Webtatic Yum Repository
HomePage: https://webtatic.com/projects/yum-repository/

- Install RHEL7
#+BEGIN_SRC sh
yum localinstall --nogpgcheck http://repo.webtatic.com/yum/el7/webtatic-release.rpm
#+END_SRC

- Install RHEL6
#+BEGIN_SRC sh
yum localinstall --nogpgcheck http://repo.webtatic.com/yum/el6/latest.rpm
#+END_SRC

* Server Hardening
[[file://home/crito/Documents/Linux/RHEL/Linux_Academy-Red_Hat_Server_Hardening_Study_Guide.pdf][Linux Academy - Red Hat Server Hardening Study Guide]]
[[file://home/crito/Documents/Linux/RHEL/Red_Hat_Enterprise_Linux-6-Security_Guide.pdf][Red Hat Enterprise Linux 6 - Security Guide]]
[[file://home/crito/Documents/Linux/RHEL/Red_Hat_Enterprise_Linux-6-Identity_Management_guide.pdf][Red Hat Enterprise Linux 6 - Identity Management Guide]]
[[file://home/crito/Documents/Linux/RHEL/Red_Hat_Enterprise_Linux-6-Security-Enhanced_Linux-en-US.pdf][Red Hat Enterprise Linux 6 - Security-Enhanced Linux]]
[[file://home/crito/Documents/Linux/RHEL/Red_Hat_Enterprise_Linux-7-Security_Guide-en-US.pdf][Red Hat Enterprise Linux 7 - Security Guide]]
[[file://home/crito/Documents/Linux/RHEL/Red_Hat_Enterprise_Linux-7-System-Level_Authentication_Guide.pdf][Red Hat Enterprise Linux 7 - System-Level Authentication Guide]]
[[file://home/crito/Documents/Linux/RHEL/Red_Hat_Enterprise_Linux-7-SELinux_Users_and_Aministrators_Guide-en-US.pdf][Red Hat Enterprise Linux 7 - SELinux User's and Administrator's Guide]]

- with Red Hat you can set notifications/alerts for when any of your products have a known vulns

** Using yum to check for vulns
- install yum-plugin-security
#+BEGIN_SRC sh
yum install yum-plugin-security
#+END_SRC

- updateinfo allows for differnet levels of verbosity on your needs
#+BEGIN_SRC sh
yum updateinfo
#+END_SRC
this provides all the information on current updates

#+BEGIN_SRC sh
yum updateinfo list
#+END_SRC
this cuts down the output

#+BEGIN_SRC sh
yum updateinfo list --sec-severity=Critical
#+END_SRC
this allows us to specify what level of vuln to search
  - has to have the capital "C" 

- check for security only updates
#+BEGIN_SRC sh
yum update --security
yum update --bugfix
yum update --advisory
yum update --sec-severity=Critical
yum update --sec-severity=Moderate
#+END_SRC

** Verifying Packages with RPM
- package is locked with the private gpg key, we use the public gpg key to unlock the package

- view installed gpg keys
#+BEGIN_SRC sh
rpm -qa gpg-pubkey*
#+END_SRC

- view infomation on a key
#+BEGIN_SRC sh
rpm -qi gpg-pubkey-352c64e5-52ae6884
#+END_SRC

this will provide something like the following
#+BEGIN_EXAMPLE
Name        : gpg-pubkey
Version     : 352c64e5
Release     : 52ae6884
Architecture: (none)
Install Date: Fri 18 Mar 2016 06:21:34 PM UTC
Group       : Public Keys
Size        : 0
License     : pubkey
Signature   : (none)
Source RPM  : (none)
Build Date  : Mon 16 Dec 2013 02:42:12 AM UTC
Build Host  : localhost
Relocations : (not relocatable)
Packager    : Fedora EPEL (7) <epel@fedoraproject.org>
Summary     : gpg(Fedora EPEL (7) <epel@fedoraproject.org>)
Description :
-----BEGIN PGP PUBLIC KEY BLOCK-----
Version: rpm-4.11.3 (NSS-3)

mQINBFKuaIQBEAC1UphXwMqCAarPUH/ZsOFslabeTVO2pDk5YnO96f+rgZB7xArB
OSeQk7B90iqSJ85/c72OAn4OXYvT63gfCeXpJs5M7emXkPsNQWWSju99lW+AqSNm
jYWhmRlLRGl0OO7gIwj776dIXvcMNFlzSPj00N2xAqjMbjlnV2n2abAE5gq6VpqP
vFXVyfrVa/ualogDVmf6h2t4Rdpifq8qTHsHFU3xpCz+T6/dGWKGQ42ZQfTaLnDM
jToAsmY0AyevkIbX6iZVtzGvanYpPcWW4X0RDPcpqfFNZk643xI4lsZ+Y2Er9Yu5
S/8x0ly+tmmIokaE0wwbdUu740YTZjCesroYWiRg5zuQ2xfKxJoV5E+Eh+tYwGDJ
n6HfWhRgnudRRwvuJ45ztYVtKulKw8QQpd2STWrcQQDJaRWmnMooX/PATTjCBExB
9dkz38Druvk7IkHMtsIqlkAOQMdsX1d3Tov6BE2XDjIG0zFxLduJGbVwc/6rIc95
T055j36Ez0HrjxdpTGOOHxRqMK5m9flFbaxxtDnS7w77WqzW7HjFrD0VeTx2vnjj
GqchHEQpfDpFOzb8LTFhgYidyRNUflQY35WLOzLNV+pV3eQ3Jg11UFwelSNLqfQf
uFRGc+zcwkNjHh5yPvm9odR1BIfqJ6sKGPGbtPNXo7ERMRypWyRz0zi0twARAQAB
tChGZWRvcmEgRVBFTCAoNykgPGVwZWxAZmVkb3JhcHJvamVjdC5vcmc+iQI4BBMB
AgAiBQJSrmiEAhsPBgsJCAcDAgYVCAIJCgsEFgIDAQIeAQIXgAAKCRBqL66iNSxk
5cfGD/4spqpsTjtDM7qpytKLHKruZtvuWiqt5RfvT9ww9GUUFMZ4ZZGX4nUXg49q
ixDLayWR8ddG/s5kyOi3C0uX/6inzaYyRg+Bh70brqKUK14F1BrrPi29eaKfG+Gu
MFtXdBG2a7OtPmw3yuKmq9Epv6B0mP6E5KSdvSRSqJWtGcA6wRS/wDzXJENHp5re
9Ism3CYydpy0GLRA5wo4fPB5uLdUhLEUDvh2KK//fMjja3o0L+SNz8N0aDZyn5Ax
CU9RB3EHcTecFgoy5umRj99BZrebR1NO+4gBrivIfdvD4fJNfNBHXwhSH9ACGCNv
HnXVjHQF9iHWApKkRIeh8Fr2n5dtfJEF7SEX8GbX7FbsWo29kXMrVgNqHNyDnfAB
VoPubgQdtJZJkVZAkaHrMu8AytwT62Q4eNqmJI1aWbZQNI5jWYqc6RKuCK6/F99q
thFT9gJO17+yRuL6Uv2/vgzVR1RGdwVLKwlUjGPAjYflpCQwWMAASxiv9uPyYPHc
ErSrbRG0wjIfAR3vus1OSOx3xZHZpXFfmQTsDP7zVROLzV98R3JwFAxJ4/xqeON4
vCPFU6OsT3lWQ8w7il5ohY95wmujfr6lk89kEzJdOTzcn7DBbUru33CQMGKZ3Evt
RjsC7FDbL017qxS+ZVA/HGkyfiu4cpgV8VUnbql5eAZ+1Ll6Dw==
=hdPa
-----END PGP PUBLIC KEY BLOCK-----
#+END_EXAMPLE

- check if an rpm correspondes to a key
#+BEGIN_SRC sh
rpm -K nss-3.28.4-1.el6_9.x86_64.rpm
#+END_SRC
this will check the md5 hash of the package and confirm if we have the gpg key available

- verify a package on the system
#+BEGIN_SRC sh
rpm -Vf /bin/elinks
#+END_SRC

- verify all packages on the system
#+BEGIN_SRC sh
rpm -Va
#+END_SRC

- check the signature of a package
#+BEGIN_SRC sh
rpm -K --nosignature elinks-0.12-0.37.pre6.el7.x86_64.rpm
#+END_SRC

** RHEL 6 iptables
-  
#+BEGIN_SRC sh
service iptables status
service iptables start
service iptables stop
#+END_SRC

- enable at boot
#+BEGIN_SRC sh
chkconfig iptables on
#+END_SRC

- view the set rules
#+BEGIN_SRC sh
iptables --list
#+END_SRC

** File Permisions and Administration
- viewing what files have world write permissions
#+BEGIN_SRC sh
find / -perm o+w
#+END_SRC
it's a good idea to make a copy of these to enable a bench mark in-case of future investigations

- sticky bit - this bit means only the user and the root may delete files that they create
#+BEGIN_EXAMPLE
drwxrwxrwt.   9 root root 4096 May 18 16:57 tmp
#+END_EXAMPLE
t - this indicates that the sticky bit is set

* Lecture
* Tutorial
* Books
[[file://home/crito/Documents/Linux/RHEL/Beginning_Red_Hat_Linux_9.pdf][Beginning Red Hat Linux 9]]
[[file://home/crito/Documents/Linux/RHEL/Red_Hat_Linux_Networking_and_System_Administration.pdf][Red Hat Linux Networking and System Administration (Legacy)]]
[[file://home/crito/Documents/Linux/RHEL/The_Definitive_Guide_to_CentOS.pdf][The Definitive Guide to CentOS (5)]]
** RHEL 6
[[file://home/crito/Documents/Linux/RHEL/A_Practical_Guide_to_Fedora_and_Red_Hat_Enterprise_linux.pdf][A Practical Guide to Fedora and Red Hat enterprise Linux (Fedora 15/RHEL 6)]]
[[file://home/crito/Documents/Linux/RHEL/RHEL_6_Administration.pdf][Red Hat Enterprise Linux 6 Administration - Real World Skills for Red Hat Administrators]]
[[file://home/crito/Documents/Linux/Red_Hat/Red_Hat_RHCSA_RHCE_6_Cert_Guide.pdf][RHCSA/RHCE 6 Cert Guide]]
[[file://home/crito/Documents/Linux/RHEL/Red_Hat_Enterprise_Linux-6-Security_Guide.pdf][Red Hat Enterprise Linux 6 - Security Guide]]
[[file://home/crito/Documents/Linux/RHEL/Red_Hat_Enterprise_Linux-6-Identity_Management_guide.pdf][Red Hat Enterprise Linux 6 - Identity Management Guide]]
[[file://home/crito/Documents/Linux/RHEL/Red_Hat_Enterprise_Linux-6-Deployment_Guide-en-US.pdf][Red Hat Enterprise Linux 6 - Deployment Guide]]
[[file://home/crito/Documents/Linux/RHEL/Red_Hat_Enterprise_Linux-6-Developer_Guide-en-US.pdf][Red Hat Enterprise Linux 6 - Developer Guide]]
[[file://home/crito/Documents/Linux/RHEL/Red_Hat_Enterprise_Linux-6-Global_File_System_2-en-US.pdf][Red Hat Enterprise Linux 6 - Global File System 2]]
[[file://home/crito/Documents/Linux/RHEL/Red_Hat_Enterprise_Linux-6-Load_Balancer_Administration-en-US.pdf][Red Hat Enterprise Linux 6 - Load Balancer Administration]]
[[file://home/crito/Documents/Linux/RHEL/Red_Hat_Enterprise_Linux-6-Security-Enhanced_Linux-en-US.pdf][Red Hat Enterprise Linux 6 - Security-Enhanced Linux]]
[[file://home/crito/Documents/Linux/RHEL/Red_Hat_Enterprise_Linux-6-Storage_Administration_Guide-en-US.pdf][Red Hat Enterprise Linux 6 - Storage Administration Guide]]
[[file://home/crito/Documents/Linux/RHEL/Red_Hat_Enterprise_Linux-6-Virtualization_Administration_Guide-en-US.pdf][Red Hat Enterprise Linux 6 - Virtualization Administration Guide]]
[[file://home/crito/Documents/Linux/RHEL/Red_Hat_Enterprise_Linux-6-Identity_Management_guide.pdf][Red Hat Enterprise Linux 6 - Identity Management Guide]]
** RHEL 7
[[file://home/crito/Documents/Linux/Red_Hat/Red_Hat_RHCSA_RHCE_7_Cert_Guide.pdf][RHCSA/RHCE 7 Cert Guide]]
[[file://home/crito/Documents/Linux/RHEL/RHEL_Server_Cookbook.pdf][Red Hat Enterprise Linux Server Cookbook (7)]]
[[file://home/crito/Documents/Linux/RHEL/Red_Hat_Enterprise_Linux-7-Security_Guide-en-US.pdf][Red Hat Enterprise Linux 7 - Security Guide]]
[[file://home/crito/Documents/Linux/RHEL/Red_Hat_Enterprise_Linux-7-System-Level_Authentication_Guide.pdf][Red Hat Enterprise Linux 7 - System-Level Authentication Guide]]
[[file://home/crito/Documents/Linux/RHEL/Red_Hat_Enterprise_Linux-7-SELinux_Users_and_Aministrators_Guide-en-US.pdf][Red Hat Enterprise Linux 7 - SELinux User's and Administrator's Guide]]
[[file://home/crito/Documents/Linux/RHEL/Red_Hat_Enterprise_Linux-7-Global_File_System_2-en-US.pdf][Red Hat Enterprise Linux 7 - Global File System 2]]
[[file://home/crito/Documents/Linux/RHEL/Red_Hat_Enterprise_Linux-7-Installation_Guide-en-US.pdf][Red Hat Enterprise Linux 7 - Installation Guide]]
[[file://home/crito/Documents/Linux/RHEL/Red_Hat_Enterprise_Linux-7-Kernel_Administration_Guide-en-US.pdf][Red Hat Enterprise Linux 7 - Kernel Administration Guide]]
[[file://home/crito/Documents/Linux/RHEL/Red_Hat_Enterprise_Linux-7-Kernel_Crash_Guide-en-US.pdf][Red Hat Enterprise Linux 7 - Kernel Crash Dump Guide]]
[[file://home/crito/Documents/Linux/RHEL/Red_Hat_Enterprise_Linux-7-Linux_Domain_Identity_Authenication_and_Policy_Guide-en-US.pdf][Red Hat Enterprise Linux 7 - Linux Domain Identity Authentication and Policy Guide]]
[[file://home/crito/Documents/Linux/RHEL/Red_Hat_Enterprise_Linux-7-Networking_Guide-en-US.pdf][Red Hat Enterprise Linux 7 - Networking Guide]]
[[file://home/crito/Documents/Linux/RHEL/Red_Hat_Enterprise_Linux-7-Performance_Tuning_Guide-en-US.pdf][Red Hat Enterprise Linux 7 - Performance Tuning Guide]]
[[file://home/crito/Documents/Linux/RHEL/Red_Hat_Enterprise_Linux-7-Power_Management_Guide-en-US.pdf][Red Hat Enterprise Linux 7 - Power Management Guide]]
[[file://home/crito/Documents/Linux/RHEL/Red_Hat_Enterprise_Linux-7-System_Administrators_Guide-en-US.pdf][Red Hat Enterprise Linux 7 - System Administrator's Guide]]
[[file://home/crito/Documents/Linux/RHEL/Red_Hat_Enterprise_Linux-7-Windows_Integration_Guide-en-US.pdf][Red Hat Enterprise Linux 7 - windows Integration Guide]]
[[file://home/crito/Documents/Linux/RHEL/RHEL_Network_Performance_Tuning.pdf][Red Hat Enterprise Linux 7 - Network Performance Tuning]]

* Links
[[https://access.redhat.com/solutions/637583][How do I upgrade from RHEL6 to RHEL7 - Red Hat Customer Portal]]
[[https://access.redhat.com/articles/1211223][How do I migrate from RHEL5 to RHEL7]]


* Fedora - Life Cycle 1yr - Release Cycle 6mth
* Usage
* [[file://home/crito/org/tech/linux_concepts/fedora_networking_config.org][Fedora Network Configuration]]
HomePage: [[https://getfedora.org/][getfedora.org]]
Wiki: [[https://fedoraproject.org/wiki/Fedora_Project_Wiki][fedoraproject.org/wiki]]
SysAdmin 26: [[https://docs.fedoraproject.org/en-US/Fedora/26/html/System_Administrators_Guide/index.html][docs.fedoraproject.org/26/system_administrators_guide]]

** Enable a repo for update
If the repo is disabled it can be enabled on the cmd line with
#+BEGIN_SRC sh
yum enablerepo= repo_name  update
#+END_SRC

** Configuring Network
**** Hosts File
- /etc/hosts
This file asks as a flat db dns file, it is looked at before dns is queried

** Setting Hostname 
- Temporary
#+BEGIN_SRC sh
hostname yournew.hostname.com
#+END_SRC

- Permanent
Edit /etc/sysconfig/network so that this persists after a reboot.
#+BEGIN_EXAMPLE
HOSTNAME=yournew.hostname.com
#+END_EXAMPLE

** Package Management
** Repos
- [[https://fedoraproject.org/wiki/EPEL][EPEL(Extra Packages for Enterprise Linux)]]
- [[https://rpms.remirepo.net/][REMI]]
- [[http://packages.atrpms.net/][ATrpms]]
- [[https://webtatic.com/projects/yum-repository/][Webtatic]]

** Exclude Specfic Repository
et repo list
+BEGIN_SRC sh
um repolist
+END_SRC

***** Method One - Temporary
n the cmd line
+BEGIN_SRC sh
um update --disablerepo=isu 
+END_SRC
his will not upgrade the packages that belong to the given repo.

***** Method Two - Permanent
dit the repo files in /etc/yum.repos.d
et the enable parameter to 0.

** EPEL (Extra Packages for Enterprise Linux)
entos
+BEGIN_SRC sh
um install epel-release
+END_SRC

** IUS (Inline with Upstream Stable)
+BEGIN_SRC sh
get https://centos7.iuscommunity.org/ius-release.rpm
pm -Uvh ius-release.rpm
um repolist
+END_SRC
** rpm
*** Basic Actions
 List of all installed packages
+BEGIN_SRC sh
pm -qa
+END_SRC
 - query the database

 Show any changes since installation
+BEGIN_SRC sh
pm -Vv
+END_SRC

*** Repo Administration
dding a repo
+BEGIN_SRC sh
get http://rpms.famillecollet.com/enterprise/remi-release-6.rpm
pm -Uvh remi-release-6*.rpm
+END_SRC
n this example we are downloading the remi repo

 Find package binary is associated with
+BEGIN_SRC sh
pm -qf /sbin/chronyd
+END_SRC

 Find all packages that are associated with a binary
+BEGIN_SRC sh
pm -ql chrony
+END_SRC
his will provide a list of all the files

 Find the configuration files of a binary
+BEGIN_SRC sh
pm -qc chrony
+END_SRC

 Find all documentation that is stored for a binary
+BEGIN_SRC sh
pm -qd chrony
+END_SRC

 Check the installation script of an rpm
 - already installed
 #+BEGIN_SRC sh
 rpm -q --scripts http
 #+END_SRC
 This allows us to check the installation script of a package
 
 - before installation
 Download the rpm from the repo
 #+BEGIN_SRC sh
 rpm -qp --scripts the_none_veri_pkg.rpm
 #+END_SRC
 qp - query package

 Query repo for package
+BEGIN_SRC sh
epoquery -ql yp-tools
+END_SRC

** yum
*** Basic Administration
 Install application
+BEGIN_SRC sh
um install nmap
+END_SRC

 Remove application
+BEGIN_SRC sh
um remove nmap
+END_SRC

 Purge application
+BEGIN_SRC sh
um purge nmap
+END_SRC

 Install a downloaded rpm
+BEGIN_SRC sh
um --nogpgcheck localinstall dl_pkg.rpm
+END_SRC
his will use the repo list to check for deps

 List all installed packages
+BEGIN_SRC sh
um list installed
+END_SRC
se grep to narrow the search window

*** Repo Administration
ist all the repos
+BEGIN_SRC sh
um repolist
+END_SRC

*** Check for system wide upgrades
+BEGIN_SRC sh
um update
+END_SRC
r
+BEGIN_SRC sh
um upgrade
+END_SRC

*** Search for application
+BEGIN_SRC sh
um search nmap
+END_SRC

 Know the binary but not the package
+BEGIN_SRC sh
um whatprovides */semanage
+END_SRC
he */ is to indicate to search for a filename semanage

*** Group Packages
**** Search Group Packages
+BEGIN_SRC sh
um grouplist
+END_SRC

**** Install Package
+BEGIN_SRC sh
um groupinstall $GROUP 
+END_SRC

*** yum-utils
**** Installation
+BEGIN_SRC sh
um update && yum install yum-utils
+END_SRC
**** Find Repo of Installed Pkg
+BEGIN_SRC sh
ind-repo-of-installed httpd
+END_SRC
**** Remove Duplicate or Ophaned Package
+BEGIN_SRC sh
ackage-cleanup --orphans
ackage-cleanup --oldkernels
+END_SRC
**** Find out Package dependency lists
+BEGIN_SRC sh
epo-graph --repoid=updates | less
+END_SRC
his will print out put all package dependencies format
libvirt-daemon-driver-nwfilter" -> {
libnl3"  -- dependent pkg
glibc"   -- dependent pkg
libvirt-daemon"
 [color="0.578260869565 0.678260869565 1.0"];

**** Check list of unresolved dependencies
+BEGIN_SRC sh
epoclosure
+END_SRC

**** Query Yum for information on package
+BEGIN_SRC sh
epoquery --requires htop
+END_SRC

**** Dump all installed RPM Pkgs into Zip file
+BEGIN_SRC sh
um-debug-dump
+END_SRC

**** Restore the dump file
+BEGIN_SRC sh
um-debug-restore yum_debug_dump-localhost.localdomain-2017-02-24_20:59:05.txt.gz
+END_SRC

**** Fix Unfinished or Aborted Yum Transactions
+BEGIN_SRC sh
um-complete-transaction --cleanup-only
um update
+END_SRC
ncomplete transactions can be found in /var/lib/yum/transaction-all* and transaction-done*

** dnf
*** Basic Administration					   :rhel:dnf:
 Install application
#+BEGIN_SRC sh
dnf install vim
#+END_SRC

 Remove application
#+BEGIN_SRC sh
dnf remove vim
#+END_SRC

 Search for application
#+BEGIN_SRC sh
dnf search vim
#+END_SRC

 Check for available updates
#+BEGIN_SRC sh
dnf check-update
#+END_SRC

 Upgrade All Software to Newest Version
#+BEGIN_SRC sh
dnf upgrade
#+END_SRC

 Upgrade a specific package
#+BEGIN_SRC sh
dnf upgrade vim
#+END_SRC

 [[file://home/crito/org/tech/linux_concepts/pkg_mgmt.org][RPM & yum]]
** SELinux
- [[file://home/crito/org/tech/security/selinux.org][selinux]]
* Lecture
* Tutorial
* Books
* Links


* CentOS - Life Cycle as RHEL
HomePage: [[https://www.centos.org/][centos.org]]
Wiki: [[https://wiki.centos.org/][wiki.centos.org]]
Placed notes for Centos in RHEL

* Trouble Shooting
** YUM: Thread died in Berkeley DB library, Fatal error - Fedora
This seemed to occur due to yum failing and corrupting /var/lib/__db00X files
#+BEGIN_SRC 
rm -f /var/lib/__db00*
yum update
#+END_SRC
this will remove the corrupted files and rebuild
