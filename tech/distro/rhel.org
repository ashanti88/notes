#+TAGS: rhel centos fedora



* Red Hat Enterprise Linux - Life Cycle 10yrs - Release Cycle 3-4yrs
* RHEL Config Files
*** /etc/sysconfig
RHEL: [[https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/5/html/Deployment_Guide/ch-sysconfig.html][RHEL 5 /etc/sysconfig]]
Fedora: [[https://docs.fedoraproject.org/en-US/Fedora/12/html/Deployment_Guide/ch-sysconfig.html#s1-sysconfig-files][Fedora - /etc/sysconfig]]
* Usage
** RHEL7 Networking
*** Files
/etc/sysconfig/network-scripts/
*** Cmds
[[file://home/crito/org/tech/cmds/ethtool.org][ethtool]] -
[[file://home/crito/org/tech/cmds/nmcli.org][nmcli]] - NetworkManager Cli
[[file://home/crito/org/tech/cmds/ip.org][ip]] - systemd ifconfig
[[file:~/org/tech/cmds/iw.org][iw]] - systemd iwconfig
[[file://home/crito/org/tech/cmds/wifi-menu.org][wifi-menu]] - ncurses wifi configuration tool
*** Example Interface Configs
#+BEGIN_EXAMPLE
TYPE=Ethernet
BOOTPROTO=none
DEFROUTE=yes
IPV4_FAILURE_FATAL=no
IPV6INIT=yes
IPV6_AUTOCONF=yes
IPV6_DEFROUTE=yes
IPV6_FAILURE_FATAL=no
NAME=enp0s17
UUID=7f1aff2d-b154-4436-9497-e3a4dedddcef
ONBOOT=no
HWADDR=00:0C:29:A1:B5:D6
PEERDNS=yes
PEERROUTES=yes
IPV6_PEERDNS=yes
IPV6_PEERROUTES=yes
#+END_EXAMPLE

- static address example
#+BEGIN_EXAMPLE
DEVICE="eth0"
BOOTPROTO="static"
IPADDR="10.10.20.11"
NETMASK="255.255.255.0"
ONBOOT="yes"
TYPE="Ethernet"
USERCTL="yes"
PEERDNS="yes"
IPV6INIT="no"
PERSISTENT_DHCLIENT="1"
#+END_EXAMPLE

*** Setting an Interface to DHCP
BOOTPROTO=dhcp
ONBOOT=yes
*** Setting an Interface to a Static ip
BOOTPROTO=static
ONBOOT=yes
IPADDR=172.27.0.32
NETMASK=255.255.255.0
GATEWAY=172.27.0.1
DNS1=172.27.0.5
*** Setting up /etc/hosts
This file is read before a request is made to the dns server 
add here any hostname => ip
Foramt is [ip hostname]
127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4
*** Permanently change hostname and DNS
- Add DNS and Hostname to interface config file
HOSTNAME=server.alick.com
DNS1=192.168.1.5
DNS2=8.8.8.8
SEARCH=alick.com

- Add the DNS server to the resolv.conf file
nameserver 8.8.8.8

*** Temporary change hostname
#+BEGIN_SRC sh
hostname $HOSTNAME
#+END_SRC

*** Basic Overview
- nmcli
- ip
- tracepath
- traceroute
- netstat
- ss

- Verifying Current State
#+BEGIN_SRC 
ip addr show
#+END_SRC
gives address information about all interfaces

#+BEGIN_SRC sh
ip -s link show enp1s0 
#+END_SRC
give packet statistics

don't use ifconfig, has now being depricated and may not show all configured information

- Analyse a path
#+BEGIN_SRC sh
tracepath www.redhat.com
traceroute www.redhat.com
#+END_SRC

- Analyse ports and services 
#+BEGIN_SRC sh
netstat -tunapl
ss - tunapl
netstat -tunpel
#+END_SRC

- NetworkManager monitors and manages network settings
  - nmcli is used to manage the settings
  - configuration is saves in the /etc/sysconfig/network-scripts directory

- nmcli concepts  
  - a device is a network
  - a connection is a collection of configuration settings
  - multiple connections can exist for a device, but only one can be active at a time    
  - to find out which connections exist for which devices
    #+BEGIN_SRC sh
    nmcli con show
    #+END_SRC
  - get device status
    #+BEGIN_SRC sh
    nmcli dev status
    #+END_SRC
    
- Creating Network Connections with nmcli
  - create a new connection with name "dhcp" that autoconnects on int eno1
    #+BEGIN_SRC sh
    nmcli con add con-name "dhcp" type ethernet ifname eno1
    #+END_SRC
  - create a new connection with the name "static" that doesn't connect automatically
    #+BEGIN_SRC sh
    nmcli con add con-name "static ifname eno1 autoconnect no type ethernet ip4 192.168.122.102 gw4 192.168.122.1
    #+END_SRC
  - bring up the static connection
    #+BEGIN_SRC sh
    nmcli con up "static" 
    #+END_SRC
  - bring down the static connection
    #+BEGIN_SRC sh
    nmcli con down "static"
    #+END_SRC
  - Change a connection variable
    #+BEGIN_SRC sh
    nmcli con show "static"
    cmcli con mod "static" ipv4.dns 192.168.122.1
    #+END_SRC
    the first cmd will show all available variables and current values
  - add another dns server
    #+BEGIN_SRC sh
    nmcli con mod "static" +ipv4.dns 8.8.8.8
    #+END_SRC
  - modify the ip and gw
    #+BEGIN_SRC sh
    nmcli con mod "static" ipv4.addresses "192.168.100.10/24 192.168.100.1"
    #+END_SRC
  - add a secondary IP addr
    #+BEGIN_SRC sh
    nmcli con mod "static" +ipv4.addresses 10.0.0.10/24
    #+END_SRC
  - Activate new settings
    #+BEGIN_SRC sh
    nmcli con up "static"
    #+END_SRC
    
- Configuration Files
/etc/sysconfig/network-scripts/ifcfg-<nam>

- after modifying any of these files use
  #+BEGIN_SRC sh
  nmcli con reload
  #+END_SRC
  to reload the configs

- Setting the hostname
/etc/hostname

- on the cmd line you can use
  #+BEGIN_SRC sh
  hostnamectl set-hostname server1.example.com
  #+END_SRC

- DNS
/etc/sysconfig/network-scripts/ifcfg-<name> --> /etc/resolv.conf
the dns name resolver is pushed from ifcfg-name to /etc/resolv.conf
  - to makesure it is always correct place it in ifcfg-name
    
*** Routing
- Setting up Static Routes
using the nmtui cmd you can easily add routes in the connections edit connection page.
  - this method will add a config file to /etc/sysconfig/network-scripts/route-<int>... 
    #+BEGIN_EXAMPLE
    ADDRESS0=10.0.0.0
    NETMASK0=255.255.255.0
    GATEWAY0=192.168.4.4
    #+END_EXAMPLE
    
*** Understanding Bridges
- virtual bridges are used with vms
  
vm0       vm1
 |         |
vnet0    vnet1
 \        /
  \      /
   virbr0
      |
    eno1

- to view bridge details
#+BEGIN_SRC sh
brctl show
#+END_SRC
this will show all vm interfaces connected to the bridge
 
- show the bridge interface details
#+BEGIN_SRC sh
ip link show
#+END_SRC

**** Setting Up a Bridge
- install the utils
#+BEGIN_SRC sh
yum install bridge-utils
#+END_SRC

- disconnect the interface you are creating the bridge on
#+BEGIN_SRC sh
nmcli dev show
nmcli dev disconnect enp1s0
#+END_SRC

- create the connection to the bridge and add the interface
#+BEGIN_SRC sh
nmcli con add type bride-slave con-name br0-port1 ifname enp1s0 master br0
#+END_SRC

- create the bridge interface
#+BEGIN_SRC sh
nmcli con add type bridge con-name br0 ifname br0
#+END_SRC

This new bridge will have a configuration file placed into /etc/sysconfig/network-scripts/
ifcfg-br0
ifcfg-br0port1

*** Understanding Network Bonds and Teams
- Both take care of link aggregation
- Network Bonding is deprecated, use Network Teaming instead
- Teaming works with a kernel driver and a user space daemon
  - teamd
    
- Teamd
  - modes are called runners
    - broadcast
    - roundrobin
    - activebackup
    - loadbalance
    - lacp
  - show current state of the team with name "team0"
    #+BEGIN_SRC sh
    teamctl team0 state
    #+END_SRC
    
**** Configuring Teams
- Four Steps to Configuring Teaming
  - Create team interface
    #+BEGIN_SRC sh
    nmcli con add type team con-name team0 ifname team0 config '{"runner":{"name": "loadbalancer"}}
    #+END_SRC
  - Determine network configuration
    #+BEGIN_SRC sh
    nmcli con mod team0 ipv4.addresses 10.0.0.10/24
    nmcli con mod team0 ipv4.method manual
    #+END_SRC
  - Assign the port interfaces
    #+BEGIN_SRC sh
    nmcli con add type team-slave ifname eth0 master team0 con-name team0-eth0
    nmcli con add type team-slave ifname eth1 master team0 con-name team0-eth1
    #+END_SRC
  - Bring team and port interfaces up/down
    #+BEGIN_SRC sh
    nmcli con up team0
    nmcli dev dis eth0
    nmcli dev dis eth1
    #+END_SRC
  - Verify
    #+BEGIN_SRC sh
    teamctl team0 state
    #+END_SRC
    
**** Create a Bridge Based on Network Teams
- Doesn't work with NetworkManager enabled
- Modify the team configuration file ifcfg-team0 and add
#+BEGIN_EXAMPLE
BRIDGE=brteam0
#+END_EXAMPLE
this will tell it to connect to the bridge device

- Make sure no IP configuration remains in the ifcfg-team0-port files
- Manually create a bridge file
#+BEGIN_EXAMPLE
DEVICE=brteam0
TYPE=Brigde
IPADDR0=192.168.122.100
PREFIX0=24
#+END_EXAMPLE

The man pages have examples
#+BEGIN_SRC sh
man 5 nmcli-examples
#+END_SRC

*** Configure networking services start at boot
- confirm that the the network service is running at boot
#+BEGIN_SRC sh
systemctl status network
systemctl list-units | grep network.target
systemctl list-dependencies multi-usr.target | grep network
#+END_SRC

- confirm that interface is set to come up at boot
#+BEGIN_SRC sh
cd /etc/sysconfig/network-scripts # this is where the configuration files are stored
nmcli con show # use this to find out the interface name
cat ifcfg-ens3
#+END_SRC
from the cat we are looking for the ONBOOT variable, and it needs to be set to yes

- set the ONBOOT variable to yes
#+BEGIN_SRC sh
nmcli con mod "ens3" connection.autoconnect yes
#+END_SRC

** RHEL7 Logging
Service - Direct write ---> /so/log/.log
        - systemctl    ---> journald
	- rsyslogd     ---> /var/log/...
	  
journalctl can be set to write to rsyslog, this way all logs are kept in one logical area
  - it is also possible to have rsyslog write to journalctl
    
- Connection Journald to rsyslog
  - rsyslog messagees are sent ot jounald and vice versa
  - Sending to journal in rsyslog.conf (not enabled)
    #+BEGIN_EXAMPLE
    $Modload omjournal
    *.* :omjournal:
    #+END_EXAMPLE
  - Receiving from journal in rsyslog.conf (enabled)
    #+BEGIN_EXAMPLE
    $ModLoad imuxsock
    $OmitLocalLogging off
    #+END_EXAMPLE
    - in /etc/rsyslog.d/listend.conf
      #+BEGIN_EXAMPLE
      $SystemLogSocketName /run/systemd/journal/syslog
      #+END_EXAMPLE

- Modules
  - connecting rsyslog to journald goes through modules
  - Different modules are available
    - im*: input module
    - om*: output module
    - and others such as parser modules, messages modification modules and more
  - Module - Importing Text Files      
    #+BEGIN_EXAMPLE
    $ModLoad imfile
    $InputFileName /var/log/httpd/error_log
    $InputFileTag apache-error:
    $InputRunFileMonitor
    #+END_EXAMPLE
  - Module - Exporting to a Database
    #+BEGIN_EXAMPLE
    $ModLoad ommysql
    $ActionOmmysqlServerPort 1234
    *.* :ommysql:database-srvername,database-name,database-userid,database-password
    #+END_EXAMPLE
    
- Setting up Remote Logging
/etc/rsyslog.conf
- two methods
  - udp - best backwards compatiability
  - tcp - recommended (if all applications run tcp logging)

- setting remote host
#+BEGIN_EXAMPLE
*.* @@server1.example.com:514
#+END_EXAMPLE
@@ - tcp
@  - udp

** RHEL7 Firewall
file://home/crito/org/tech/linux_concepts/centos7_firewall.org

** SMTP Server on RHEL7
file://home/crito/org/tech/linux_concepts/rhel7_Setting_Up_an_SMTP_Server.org

** CentOS 7 Mail Server
file://home/crito/org/tech/linux_concepts/centos7_mail_server.org

** Red Hat Identity Management(IdM) Solution

** RHEL7 Configuring a Cache-only DNS Server
files - /etc/unbound/unbound.conf

- install dns server
#+BEGIN_SRC sh
yum install unbound
#+END_SRC

- enable and start the service
#+BEGIN_SRC sh
systemctl enable unbound
systemctl start unbound
#+END_SRC

- create a config for unbound
#+BEGIN_EXAMPLE
interface: 0.0.0.0
access-control: 0.0.0.0/0 allow
forward-zone:
	name: "."
	forward-addr: 8.8.8.8
#+END_EXAMPLE
- listen of all interfaces
- allow all to use the dns server
- set up google as the forward zone (where the server will retrieve addresses it doesn't know)
  
- check the configuration
#+BEGIN_SRC sh
unbound-checkconf
#+END_SRC

- restart the unbound server
#+BEGIN_SRC sh
systemctl restart unbound
systemctl status -l unbound
#+END_SRC
also check the status, just to makesure no errors are being thrown

- Open the FW
#+BEGIN_SRC sh
firewall-cmd --permanent --add-service=dns
firewall-cmd --reload
#+END_SRC

** RHEL7 Configuring a Samba Server
*** Accessing Samba shares
- for working with samba you will need the utils
#+BEGIN_SRC sh
yum install cifs-utils
#+END_SRC

- smbclient
#+BEGIN_SRC sh
smbclient -L //localhost
#+END_SRC
will show all exports

- mounting a directory for smb share
#+BEGIN_SRC sh
mount -o username=guest //localhost/share /mnt
#+END_SRC

*** Samba Server Configuration
- Create the share on the Linux File System
- Grant Access Permissiions on the Linux File System
- Create the share in smb.conf
- Configure Security
- Consider Restrictions through smb.conf
- Start the Samba Server
  #+BEGIN_SRC sh
  systemctl start smb nmb
  systemctl enable smb nmb
  #+END_SRC

- Creating the Samba Share
#+BEGIN_SRC sh
mkdir /sambashare
chmod 777 /samabashare/
#+END_SRC
not secure but is ok for initial configuration

- Configuring smb.conf
  - confirm installation of samba
    #+BEGIN_SRC sh
    yum install samba samba-client
    #+END_SRC
  - edit Share definitions in /etc/smb.conf
    #+BEGIN_EXAMPLE
    [sambashare]
    	comment = my_share
	path = /sambashare
	public = yes
	writable = yes
	write list = +users
    #+END_EXAMPLE
    there are a few examples to help create the required share in the file
  - start the samba service
    #+BEGIN_SRC sh
    systemctl start smb
    systemctl enable smb
    #+END_SRC
  - confirm the samba service is running
    #+BEGIN_SRC sh
    systemctl status -L smb
    smbclient -L //localhost
    #+END_SRC
  - Create samba users
    #+BEGIN_SRC sh
    smbpasswd -a user_name
    #+END_SRC
    there needs to be a corresponding user on the linux system aswell
  - Mount the share
    #+BEGIN_SRC sh
    mount -o username=bob //localhost/sambashare /mnt
    #+END_SRC
    
- Tuning the share for access restrictions 
  - edit the smb.conf for ip access
    #+BEGIN_EXAMPLE
    hosts allow = 192.168.0
    #+END_EXAMPLE
    this will allow all ips in the 192.168.0.0/24 range
  or
  - firewalld could be used instead to samba, but choose only one method
    
  - wirte permissions smb.conf
    #+BEGIN_EXAMPLE
    write list = @users
    valid users = @users
    #+END_EXAMPLE
    only users in the users group can access and write to the share
  or
   - alternative option
     #+BEGIN_EXAMPLE
     read only = no
     #+END_EXAMPLE
     this will use the linux system to decide who has privs
     #+BEGIN_EXAMPLE
     read only = yes
     #+END_EXAMPLE
     no one can write to the share

- Verifying the Configuration
#+BEGIN_SRC sh
testparm
#+END_SRC
will throw an error if any is present in smb.conf

- SELinux Configuration
  - add all service man pages and update the man pages
    #+BEGIN_SRC sh
    yum whatprovides */sepolicy
    yum install policycoreutils-devel
    sepolicy manpage -a -p /usr/share/man/man8
    mandb -c
    man -k _selinux
    #+END_SRC
    this will provide a list of selinux service policies
    
  - find samba policy
    #+BEGIN_SRC sh
    man -k _selinux | grep samba
    #+END_SRC
    this will provide you with the man page that will help you configure selinux for samba
    
  - setting the selinux labels
    - only samaba share
      #+BEGIN_SRC sh
      ls -dZ /sambashare
      semanage fcontext -a -t samba_share_t "/sambashare(/.*)?"
      restorcon -R -v /sambashare/
      geetenforce
      setenforce 1
      #+END_SRC
    - view all available boolians
      #+BEGIN_SRC sh
      getsebool -a | grep samba
      #+END_SRC
      
- Open the FW
#+BEGIN_SRC sh
firewall-cmd --permanent --add-service=samba
firewall-cmd reload
#+END_SRC
you may also need samba-client service    

** RHEL7 Setting up an SMTP Server (RHCE)
- Understanding Server Roles
  - Email transmission - SMTP
  - Email reception - POP, IMAP
  - Email Client - mutt, evolution etc
    - users also run Postfix but as a null client.
      
- Understanding Postfix Configuration
  - relaying - mail is sent to an outgoing mail server for further processing
    - DNS MX records are used to look up the mail server for the recipient domain.

*** Configuring Postfix for Mail Reception
  - /etc/postfix/
    - master.cf - this is where postfix processes are called from
    - main.cf - this is used to control the entire configuration
      - inet_interface  - this variable is what postfix will listen on
      - myorigin        - this should be set to the domain
      - relayhost       - the server to forward mail to for further processing (if the host is in [] this means dns doesn't need to be done)
      - mydestination   - who's mail should the server accept (these domains end with a full stop example.com. )
      - local_transport - what protocols to use for local mail delivery
      - mynetworks      - what networks the mail server will accept connects from
      - inet_protocols  - this is set to all by default, this may cause issues if ipv6 has not been configured. If only on an ipv4 network change this to ipv4.
	
- useful cmds
#+BEGIN_SRC sh
postconf
#+END_SRC
this will print to the screen all variables and values of the postfix config

#+BEGIN_SRC sh
postconf inet_interfaces
#+END_SRC
this will print the specific key-value pair of the requested variable (here it would be the inet_interfaces)

#+BEGIN_SRC sh
postconf -e 'myorigin = example.com'
#+END_SRC
this will alter the current value of the variable (myorigin will be example.com)

#+BEGIN_SRC sh
postqueue -p
#+END_SRC
which messages are still to be 

#+BEGIN_SRC sh
postqueue -f
#+END_SRC
this will flush the current queue

*** Understanding Postfix Maps
- /etc/postfix has additional config files to add extra functionality
- use cmd postmap [filename]
  - access    - configures access restrictions
    #+BEGIN_EXAMPLE
    192.168.122.101 OK
    192.168.100 REJECT
    #+END_EXAMPLE
  - canonical - contains alias configuration
    #+BEGIN_EXAMPLE
    jim		jim@somewhere.com
    @somewhere.com	@example.com
    #+END_EXAMPLE
  - relocated - gives information about moved users
    #+BEGIN_EXAMPLE
    jim@example.com 	jim@somewhere.com
    #+END_EXAMPLE
  - virtual   - forwards mail to specific users
    #+BEGIN_EXAMPLE
    frank@example.com 	root
    #+END_EXAMPLE
 
** How to Install Xfce on CentOS7
url: https://www.rootusers.com/how-to-install-xfce-gui-in-centos-7-linux/

- Ensure that the epel repo is installed
#+BEGIN_SRC sh
yum install epel-release -y
#+END_SRC

- Add the group package "Server with GUI", this will install Gnome
#+BEGIN_SRC sh
yum groupinstall "Server with GUI" -y
#+END_SRC

- Install xfce
#+BEGIN_SRC sh
yum groupinstall "xfce" -y
#+END_SRC

- Remove xfce
#+BEGIN_SRC sh
yum groupremove "xfce"
#+END_SRC

** REL7 Time services
*** Cmds
[[file://home/crito/org/tech/cmds/timedatectl.org][timedatectl]]
chronyd

*** setting system clock
- available timezones
#+BEGIN_SRC sh
timedatectl list-timezones
#+END_SRC

- if unsure of what timezone to use run tzselect. This will guide you through questions to findout what your timezone should be using
  
- Once you have the timezone you would like to use it needs to be set
#+BEGIN_SRC sh
timedatectl set-timezone Europe/London
#+END_SRC

*** Setting ntpd
RHEL uses chronyd to configure ntp

- confirm that chronyd is running
#+BEGIN_SRC sh
systemctl status chronyd
#+END_SRC

- we can use the chronyc cmd to interact with chronyd
#+BEGIN_SRC sh
chronyc sources -v
#+END_SRC
this will show our current NTP sources

- we can find out the machine that we are currently using as our ntp source with
#+BEGIN_SRC sh
chronyc tracking
#+END_SRC

- change the ntp source, any changes made will require that the service is restarted
/etc/chrony.conf
#+BEGIN_EXAMPLE
server 0.rhel.pool.ntp.org iburst
server 1.rhel.pool.ntp.org iburst
server 2.rhel.pool.ntp.org iburst
server 3.rhel.pool.ntp.org iburst
#+END_EXAMPLE
these can be replaced with different machines
iburst - after restart will send 4 measurements in a short time period

** Change the default kernel to boot
- This will print out all available options (numbering starts from 0)
#+BEGIN_SRC sh
awk -F\' /^menuentry/{print\$2} /etc/grub2.cfg
#+END_SRC
or
#+BEGIN_SRC sh
yum list kernel
#+END_SRC

2. Selecting a new boot option
#+BEGIN_SRC sh
grub-set-default 1
#+END_SRC
This will select the second line printed with above command as the default boot option

3. Confirm the defualt option has been selected
#+BEGIN_SRC sh
cat /boot/grub/grubenv
#+END_SRC
This will show the new option as the saved_entry=<new_option>

4. Reboot system for change to take effect


* Lecture
* Tutorial
* Books
[[file://home/crito/Documents/Linux/Red_Hat/Red_Hat_RHCSA_RHCE_7_Cert_Guide.pdf][RHCSA/RHCE 7 Cert Guide]]
[[file://home/crito/Documents/Linux/Red_Hat/Red_Hat_RHCSA_RHCE_6_Cert_Guide.pdf][RHCSA/RHCE 6 Cert Guide]]
[[file://home/crito/Documents/Linux/RHEL/RHEL_Server_Cookbook.pdf][Red Hat Enterprise Linux Server Cookbook]]
[[file://home/crito/Documents/Linux/RHEL/The_Definitive_Guide_to_CentOS.pdf][The Definitive Guide to CentOS]]

* Links
[[https://access.redhat.com/solutions/637583][How do I upgrade from RHEL6 to RHEL7 - Red Hat Customer Portal]]
[[https://access.redhat.com/articles/1211223][How do I migrate from RHEL5 to RHEL7]]


* Fedora - Life Cycle 1yr - Release Cycle 6mth
* Usage
* [[file://home/crito/org/tech/linux_concepts/fedora_networking_config.org][Fedora Network Configuration]]
HomePage: [[https://getfedora.org/][getfedora.org]]
Wiki: [[https://fedoraproject.org/wiki/Fedora_Project_Wiki][fedoraproject.org/wiki]]
SysAdmin 26: [[https://docs.fedoraproject.org/en-US/Fedora/26/html/System_Administrators_Guide/index.html][docs.fedoraproject.org/26/system_administrators_guide]]

** Enable a repo for update
If the repo is disabled it can be enabled on the cmd line with
#+BEGIN_SRC sh
yum enablerepo= repo_name  update
#+END_SRC

** Configuring Network
**** Hosts File
- /etc/hosts
This file asks as a flat db dns file, it is looked at before dns is queried

** Setting Hostname 
- Temporary
#+BEGIN_SRC sh
hostname yournew.hostname.com
#+END_SRC

- Permanent
Edit /etc/sysconfig/network so that this persists after a reboot.
#+BEGIN_EXAMPLE
HOSTNAME=yournew.hostname.com
#+END_EXAMPLE

** Package Management
** Repos
- [[https://fedoraproject.org/wiki/EPEL][EPEL(Extra Packages for Enterprise Linux)]]
- [[https://rpms.remirepo.net/][REMI]]
- [[http://packages.atrpms.net/][ATrpms]]
- [[https://webtatic.com/projects/yum-repository/][Webtatic]]

** Exclude Specfic Repository
et repo list
+BEGIN_SRC sh
um repolist
+END_SRC

***** Method One - Temporary
n the cmd line
+BEGIN_SRC sh
um update --disablerepo=isu 
+END_SRC
his will not upgrade the packages that belong to the given repo.

***** Method Two - Permanent
dit the repo files in /etc/yum.repos.d
et the enable parameter to 0.

** EPEL (Extra Packages for Enterprise Linux)
entos
+BEGIN_SRC sh
um install epel-release
+END_SRC

** IUS (Inline with Upstream Stable)
+BEGIN_SRC sh
get https://centos7.iuscommunity.org/ius-release.rpm
pm -Uvh ius-release.rpm
um repolist
+END_SRC
** rpm
*** Basic Actions
 List of all installed packages
+BEGIN_SRC sh
pm -qa
+END_SRC
 - query the database

 Show any changes since installation
+BEGIN_SRC sh
pm -Vv
+END_SRC

*** Repo Administration
dding a repo
+BEGIN_SRC sh
get http://rpms.famillecollet.com/enterprise/remi-release-6.rpm
pm -Uvh remi-release-6*.rpm
+END_SRC
n this example we are downloading the remi repo

 Find package binary is associated with
+BEGIN_SRC sh
pm -qf /sbin/chronyd
+END_SRC

 Find all packages that are associated with a binary
+BEGIN_SRC sh
pm -ql chrony
+END_SRC
his will provide a list of all the files

 Find the configuration files of a binary
+BEGIN_SRC sh
pm -qc chrony
+END_SRC

 Find all documentation that is stored for a binary
+BEGIN_SRC sh
pm -qd chrony
+END_SRC

 Check the installation script of an rpm
 - already installed
 #+BEGIN_SRC sh
 rpm -q --scripts http
 #+END_SRC
 This allows us to check the installation script of a package
 
 - before installation
 Download the rpm from the repo
 #+BEGIN_SRC sh
 rpm -qp --scripts the_none_veri_pkg.rpm
 #+END_SRC
 qp - query package

 Query repo for package
+BEGIN_SRC sh
epoquery -ql yp-tools
+END_SRC

** yum
*** Basic Administration
 Install application
+BEGIN_SRC sh
um install nmap
+END_SRC

 Remove application
+BEGIN_SRC sh
um remove nmap
+END_SRC

 Purge application
+BEGIN_SRC sh
um purge nmap
+END_SRC

 Install a downloaded rpm
+BEGIN_SRC sh
um --nogpgcheck localinstall dl_pkg.rpm
+END_SRC
his will use the repo list to check for deps

 List all installed packages
+BEGIN_SRC sh
um list installed
+END_SRC
se grep to narrow the search window

*** Repo Administration
ist all the repos
+BEGIN_SRC sh
um repolist
+END_SRC

*** Check for system wide upgrades
+BEGIN_SRC sh
um update
+END_SRC
r
+BEGIN_SRC sh
um upgrade
+END_SRC

*** Search for application
+BEGIN_SRC sh
um search nmap
+END_SRC

 Know the binary but not the package
+BEGIN_SRC sh
um whatprovides */semanage
+END_SRC
he */ is to indicate to search for a filename semanage

*** Group Packages
**** Search Group Packages
+BEGIN_SRC sh
um grouplist
+END_SRC

**** Install Package
+BEGIN_SRC sh
um groupinstall $GROUP 
+END_SRC

*** yum-utils
**** Installation
+BEGIN_SRC sh
um update && yum install yum-utils
+END_SRC
**** Find Repo of Installed Pkg
+BEGIN_SRC sh
ind-repo-of-installed httpd
+END_SRC
**** Remove Duplicate or Ophaned Package
+BEGIN_SRC sh
ackage-cleanup --orphans
ackage-cleanup --oldkernels
+END_SRC
**** Find out Package dependency lists
+BEGIN_SRC sh
epo-graph --repoid=updates | less
+END_SRC
his will print out put all package dependencies format
libvirt-daemon-driver-nwfilter" -> {
libnl3"  -- dependent pkg
glibc"   -- dependent pkg
libvirt-daemon"
 [color="0.578260869565 0.678260869565 1.0"];

**** Check list of unresolved dependencies
+BEGIN_SRC sh
epoclosure
+END_SRC

**** Query Yum for information on package
+BEGIN_SRC sh
epoquery --requires htop
+END_SRC

**** Dump all installed RPM Pkgs into Zip file
+BEGIN_SRC sh
um-debug-dump
+END_SRC

**** Restore the dump file
+BEGIN_SRC sh
um-debug-restore yum_debug_dump-localhost.localdomain-2017-02-24_20:59:05.txt.gz
+END_SRC

**** Fix Unfinished or Aborted Yum Transactions
+BEGIN_SRC sh
um-complete-transaction --cleanup-only
um update
+END_SRC
ncomplete transactions can be found in /var/lib/yum/transaction-all* and transaction-done*

** dnf
*** Basic Administration					   :rhel:dnf:
 Install application
+BEGIN_SRC sh
nf install vim
+END_SRC

 Remove application
+BEGIN_SRC sh
nf remove vim
+END_SRC

 Search for application
+BEGIN_SRC sh
nf search vim
+END_SRC

 Check for available updates
+BEGIN_SRC sh
nf check-update
+END_SRC

 Upgrade All Software to Newest Version
+BEGIN_SRC sh
nf upgrade
+END_SRC

 Upgrade a specific package
+BEGIN_SRC sh
nf upgrade vim
+END_SRC

 [[file://home/crito/org/tech/linux_concepts/pkg_mgmt.org][RPM & yum]]
** SELinux
- [[file://home/crito/org/tech/security/selinux.org][selinux]]
* Lecture
* Tutorial
* Books
* Links


* CentOS - Life Cycle as RHEL
HomePage: [[https://www.centos.org/][centos.org]]
Wiki: [[https://wiki.centos.org/][wiki.centos.org]]
Placed notes for Centos in RHEL

* Trouble Shooting
** YUM: Thread died in Berkeley DB library, Fatal error - Fedora
This seemed to occur due to yum failing and corrupting /var/lib/__db00X files
#+BEGIN_SRC 
rm -f /var/lib/__db00*
yum update
#+END_SRC
this will remove the corrupted files and rebuild
