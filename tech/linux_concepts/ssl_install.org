Add the 443 vhost into the nginx config for the site, backup the current config before applying this one*

* Example config for nginx

server { listen 78.137.127.215:443; server\_name
andrewsofficefurniture.com *.andrewsofficefurniture.com; root
/var/www/vhosts/andrewsofficefurniture.com/htdocs;

ssl on; ssl\_certificate
/etc/pki/tls/certs/andrewsofficefurniture.com.crt; ssl\_certificate\_key
/etc/pki/tls/certs/andrewsofficefurniture.com.key; ssl\_protocols SSLv3
TLSv1 TLSv1.1 TLSv1.2; ssl\_ciphers HIGH:!aNULL:!MD5;
keepalive\_requests 100000;

location / { index index.html index.php; try\_files $uri $uri/ @handler;
expires 30d; }

location /app/ { deny all; } location /includes/ { deny all; } location
/lib/ { deny all; } location /media/downloadable/ { deny all; } location
/pkginfo/ { deny all; } location /report/config.xml { deny all; }
location /var/ { deny all; } # location /LICENSE.html { deny all; } #
location /LICENSE.txt { deny all; } # location /LICENSE\_AFL.txt { deny
all; } # location /mage { deny all; } # location /index.php.sample {
deny all; }

location /. { return 404; }

location @handler { rewrite / /index.php; }

location ~ .php/ { rewrite \^(.*.php)/ $1 last; }

location ~ .php$ { if (!-e $request\_filename) { rewrite / /index.php
last; }

expires off; fastcgi\_pass andrewsofficefurniturecombackend;
fastcgi\_param HTTPS $fastcgi\_https; fastcgi\_param SCRIPT\_FILENAME
$document_root$fastcgi\_script\_name; # fastcgi\_param MAGE\_RUN\_CODE
default; # fastcgi\_param MAGE\_RUN\_TYPE store; include
fastcgi\_params; } }

*Create a .crt and .key file in /etc/pki.tls/certs for the site domain
name e.g.Â andrewsofficefurniture.com.crt etc*

* Set the permissions as follows:

chmod 644 /etc/pki/tls/certs/andrewsofficefurniture.com.crt

chmod 600 /etc/pki/tls/certs/andrewsofficefurniture.com.key

For the CRT file

Copy the CRT from the SSL certificate screen following by the CA from
the following page:

[[http://kb.ukfast.net/Comodo_CA_Certs]]

For the .key file

Copy the key from the SSL certificate screen

* After this, run a configtest, if it comes back OK, then restart nginx

*/Installing SSL's for the mail service on a Plesk Server/*

[[http://kb.odin.com/uk/1062]]

*Checking how a non SNI comp would load an SSL*

openssl s\_server -cert
/etc/pki/tls/certs/www.greatgardensonline.com.crt -key
/etc/pki/tls/private/www.greatgardensonline.com.key &

then

openssl s\_client -connect localhost:4433 | openssl x509 -text

*/Comodo Trust logo/*

[[https://trustlogo.com/ssl-certificate-support/][]][[https://trustlogo.com/ssl-certificate-support/]]

/*CSR Generation*/

This can be done via Plesk by proceeding through the following steps:

Log in to Plesk and go to 'Domains >> Manage Hosting for the domain you
want to generate it for' >> Secure Your Sites >> Click Add SSL
Certificate'. When in here enter a Certificate Name, select the bit size
of which 2048 or higher is normally required for modern SSL's, select
the country, enter the state or province, enter the location, enter the
Organization Name, enter the Department (if applicable), enter the
Domain Name and then enter your Email Address. Once you have filled this
in proceed to click 'Request' to generate the CSR. Next in SSL
Certificates below this, click the name of the certificate to open this
up. This will then show you the CSR section which when providing to
generate an SSL you will need the entire of this including the header
and footer of this that will look like the following:

-----BEGIN CERTIFICATE SIGNING REQUEST-----

-----END CERTIFICATE SIGNING REQUEST-----

If you need this as a file you can simply copy and paste this into a
text file using something such as notepad on Windows save this file then
provide the file itself.

You can also do this on an IP basis by running through the same steps
via Plesk by going to 'Tools and Settings >> SSL Certificates'

Alternatively you can also do this over SSH using the instructions found
at the following link:

[[http://tecadmin.net/simple-steps-to-generate-csr-on-centos/]]
