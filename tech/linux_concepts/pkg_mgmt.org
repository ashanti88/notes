#+TAGS: sys pkg


* Package Management Tools
** dpkg 							:sys:deb:pkg:
Install

> dpkg -i application.deb

*makesure to add the deb-src to the source.list for updates

Remove

> dpkg -r application.deb

Purge

> dpkg -P application.deb

Adding an additional architecture

this comes in handy when you need to install a 32bit application on a
64bit machine

> dpkg --add-architecture i386

> apt-get update

** apt 								:sys:deb:pkg:
Update available software database

> apt-get update

or

> apt update

Upgrade all software available for upgrade

> apt-get upgrade

or

> apt upgrade

Upgrade with a little intelligence, tries to not break any applications

> apt-get dist-upgrade

Install

> apt-get install application

Remove

> apt-get remove application

Purge

This will attempt to remove all configuration files

> apt-get purge apllication

Search for an application

>apt-cache search "keyword"

Show all installed applications

Apt only will not know about software installed with dpkg or from source
unless told

> apt-cache pkgnames

Fix broken dependencies

This comes in hand if you have installed a .deb with dpkg and there are
some dependencies missing

>apt-get -f install

Download the source file

To keep track of installed applications from source make sure the source
is added to /etc/apt/source.list. It will be a deb-src ....

> apt-get source application

Installing dependencies for a source file

>apt-get build-dep application

*apt-key*

to add a gpg key to a repository, first download the key and save as a
file.

> apt-key add <saved\_gpg\_key>

*Apt-Src *

! Think this just brings both "apt-get" and "dpkg" togeather

Downloading the source

Building source files

> apt-src build <package>

Installing source files

>apt-src

*Updating debian kernel*

> apt-cache search linux-image

this will provide all available debian linux kernels

*** rollback an apt-get upgrade
Article: [[https://www.cyberciti.biz/howto/debian-linux/ubuntu-linux-rollback-an-apt-get-upgrade/][nixcraft]]
1. search the apt history for the date of the upgrade to rollback from
  > grep -A 2 'Start-Date: YYYY-MM-DD HH:MM:SS' /var/log/apt/history.log
2. create list of programs that are to be removed
  > grep -A 2 'Start-Date: YYYY-MM-DD HH:MM:SS' /var/log/apt/history.log | tail -1 >/tmp/packages.txt
3. edit the /tmp/packages.txt and delete the Install: word
  > sed -i 's/Install://' /tmp/packages.txt
4. Final clean up
  > tr ',' '\n' < /tmp/packages.txt | sed '/automatic)/d' | awk '{ print $1}' > /tmp/final.packages.txt
  > wc -l /tmp/packages.txt - this will give the number packages that were installed
5. run this script as root
# Run as root
# Store packages name in $p
p="$(</tmp/final.packages.txt)"
 
# Nuke it
apt-get --purge remove $p
 
#clears out the local repository of retrieved package files
apt-get clean
 
# Just in case ...
apt-get autoremove
 
# Verify disk space
df -H

** rpm 							       :sys:rhel:pkg:
list of all installed 

rpm -qa

show any changes since installation

rpm -Vv

** yum 							       :sys:rhel:pkg:

+ Install application

> yum install <application>

+ Remove application

> yum remove <application>

+ Purge application

> yum purge <application>


+ Check for system wide upgrades

> yum update

or

> yum upgrade

> yum provides *one to look up!!!!*

** dnf 							       :sys:rhel:pkg:
** pacman 						       :sys:arch:pkg:
** yaourt 						       :sys:arch:pkg:
** zypper 						       :sys:suse:pkg:
