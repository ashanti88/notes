#+TAGS: code php

* php5
** Administration
+ What modules are installed
> php -m
*** Cmds
**** php5enmod
+ Description
  - this cmd is enables installed php modules
  - it is in the same vein as a2enmod for apache
**** php5dismod
+ Description
  - this cmd disables a php module
  
* php7

* Pkg Mgt
** Pear
** Packagist
URL: [[https://packagist.org/][Home Page]]
** Composer
URL: [[https://getcomposer.org/][Home Page]]
Composer deals with dependency management in php.
Dependencies are dealt with on a project level basis apose to system wide like apt or yum.
Comparable to js npm and ruby's bundler.

*** Installation
+ Manual Download
1. Download the installer to the current directory
> php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
2. Verify the installer SHA-384 which you can also cross-check [[https://composer.github.io/pubkeys.html][here.]]
> php -r "if (hash_file('SHA384', 'composer-setup.php') === '55d6ead61b29c7bdee5cccfb50076874187bd9f21f65d8991d46ec5cc90518f447387fb9f76ebae1fbbacf329e583e30') { echo 'Installer verified'; } else { echo 'Installer corrupt'; unlink('composer-setup.php'); } echo PHP_EOL;"
3. Run the installer
> php composer-setup.php
4. Remove the installer
> php -r "unlink('composer-setup.php');"

+ Arch Linux
> yaourt -Sy composer

+ Installer Options
--install-dir=/select/dir
--filename=/choose_name

+ Usage
> php composer.phar install
Run this in the project root and it will install dependencies for a project.

* Lecture
* Tutorial
* Articles
** unlink() Vs unset()
URL: http://phppot.com/php/php-unlink-vs-unset/
** include() Vs require()
URL: http://phppot.com/php/comparison-between-include-and-require-statements-in-php/
* Books
** [[file://home/crito/Documents/php/O'Reilly%20-%20Programming%20PHP.pdf][O'Reilly - Programming PHP]]
*** Lexical Structure
    
+ Starting a php file
<?php - this has to be at the top of the file before any php code
?> - this is the corresponding bracket to close the php file not necessary in a php only file

+ Comments
\# - shell style comments
// - C++ style comments 
/* - C style comments
All styles work with php

+ Varibales
- all start with the $
- case insensitive, must begin with either an underscore or and ASCII lower or capital letter

- Functions - not case sensitive  
- Classes - not case sensitive
  
+ Arrays
- counting starts at 0

exp:

$person[0] = "Jimmy";
$person[1] = "Fred";

associated array
$person["Builder"] = "Bob";

array construct()
$person('Bob', 'Fred', 'Phil');
$person('builder' => 'Bob',
        'baker'   => 'Fred',
        'plumber' => 'Phil')

  
+ Looping arrays
foreach($person as $name){
    $echo "Hello, $name\n";
}


+ Sort arrays
sort($person); - will sort alphabetically left to right

+ Resources
These are things like database connections

+ NULL
Similar to perls undef or pythons None

+ Variable References
to make $black a reference to $white

$black =& $white;

$black is now storing the value of $white
- if $white changes so does the value of $black

