#+TAGS: web proxy cache


* haproxy
* Description
* Usage
* Lectures
* Articles
** An Introduction to HAProxy and Load Balancing Concepts - Digital Ocean
[[https://www.digitalocean.com/community/tutorials/an-introduction-to-haproxy-and-load-balancing-concepts][URL]]
+ HAProxy - High Availability Proxy

*** Terminology
+ Access Control List(ACL)
  - These are used to test a condition and perform an action
  - Example config
    - acl <url> <cond> <pattern> 
    - [[http://cbonte.github.io/haproxy-dconv/configuration-1.4.html#7][HAProxy Manual ACL section]]
      
+ Backend
  - A set of servers that receive forwarded requests. 
  - These are defined in the backend section of the HAProxy configuration.
  - A backend can consist of several servers.
  - Example config
    - backend web-backend
         balance roundrobin
         server web1 web1.yourdomain.com:80 check
         server web2 web2.yourdomain.com:80 check
    
      backend blog-backend
         balance roundrobin
         mode http
         server blog1 blog1.yourdomain.com:80 check
         server blog1 blog1.yourdomain.com:80 check

    - balance roundrobin - LB Algorithm
    - mode http - this specifies that layer 7 proxying will be used.
      
+ Frontend
  - defines how requests should be delivered to backend.
  - these are defined in the frontend section of the HAProxy configuration.
  

*** Types of Load Balancing
    
+ No Load Balancing
  - User ----> Web ----> Server ----> DB
  - any disruption between these will cause the site to be down.

+ Layer 4 Load Balancing
  - This is the simplest way to load balance.
  - Load balancing this way will forward user traffic based on ip and port.
  - Normally the content on the backend servers is identical.

+ Layer 7 Load Balancing
  - This is more complex and directs traffic based on content request.
  - This allows for backend servers to hold different content.
    
*** Load Balancing Algorithms
    
+ roundrobin
  - this selects servers in turn. [default]

+ leastconn
  - this selects the server with the least number of connections.
    
+ source
  - selects the server based on a hash made using the visitors IP.
    
*** Health Check
    
+ The health check is used to determine if a backend server is available to process requests.	
+ This means that manual removal of the server is not required.
+ If a server fails a health check it is automatically disabled, and traffic is no longer forwarded to it.

*** Other Options
    
+ LVS - Linux Virtual Server 
  - A simple layer 4 load balancer, included with many distros.

+ Nginx
  - A fast and reliable web server that can be used as a proxy and load balancer.
  - Nginx and HAProxy are usually used in conjunction for caching and compression capabilities.
    
*** High Availability
   - A high availability (HA) setup is an infrastructure without a single point of failure. It prevents a single server failure from being a downtime event by adding redundancy to every layer of your architecture. A load balancer facilitates redundancy for the backend layer (web/app servers), but for a true high availability setup, you need to have redundant load balancers as well.
     

+ Basic Set up
  
                                  LB1    App Server1     DB-Server1
    User ----> Flosting IP ---->
                                  LB2    App Server2     DB-Server2

      


