#+TAGS: net anal sec recon


* nmap							 :net:anal:sec:recon:
* Description
* Usage

> nmap <options> <search\_address>

** Search Types
-sS - syn scan. This is the default scan.
-sT - connect scan
-sU - udp scan.
-sL - list scan - this option will enumerate every ip address in the network block and does a dns reverse lookup (unless -n is issued)
-sV - version scan.
-sP - ping scan
-sC - scripting engine
-sF - fin scan
-sX - xmas scan
-sN -
-sA - ack scan
-sW - window scan - similar to ack scan bit is able to detect open versus closed ports against certain machines.
-sM - Maimon scan - similar to FIN scan, used to get by fw, but works on only a few systems.
-sI - idle scan - slow and complex
-sO - IP scan - determines which IP protocols are surrported by thetarget.
-b - ftp bounce scan - deprecated scan type. tricks ftp servers into performing port scanx by proxy. Most ftp servers are now patched against this.

** Options
-p - decides which ports to scan. Default is to scan 1 - 1024, plus 600 other ports specified in the nmap database. -p- is short for -p1-65535.
-pT:x,yz,U:x,y,z - this specifies which protocol and port number to scan.
-p[1024-] - when bracketed only ports that are in the nmap-services file will be scanned.
-A - equivalent to -sV -sC -O --traceroute
-O - os detection
-T<num> - timing mode - Â lower the number slower the scan. T4 equivalent to -T aggressive
-oA <file> - outputs to all formats
-PN - no ping
-n - no name resolution
-R - resolve all, even machines that are down
--system-dns - by default nmap uses the dns configured on the host machine. This will use the system resolver, it is slow and rarely useful.
--dns-servers <server1>, <serverN> - this uses the stated servers to relove dns queries.
-iL - input from list. this allows a file to be used to provide hosts to be scanned.
-iR - choose targets at random.
--exclude - exclude a certain host from the scan. this is a comma seperated list.
--excludefile - this file contains addresses that shouldn't be scanned.
--traceroute - will have traceroute run on the target
-PS - TCP SYN Ping - this sends a a tcp packet with syn flag set. the default port is 80 but any other port can be set (-sP has to be set and it replaces the default ping detection method).
-PA - TCP ACK Ping - similar to above but the ack flag is set. Using ack can fool the fw to thinking that a connection is established between host and target.
-PU - UDP Ping - this scan is similar to PS and PA scans, it sends an empty udp packet to the given port. By default it is 31338 which unlikely to be in use. The advantage of this scan is that it by passes fw that scan for only tcp.
-PE - this ping scan uses icmp echo request packets to determine an up host.
-PP - this ping scan uses icmp timestamp request to determine an up host.
-PM - this ping scan uses icmp adderess mask query to determine an up host.
-PO<protocol\_list> - this scan sends ip packets with the specified number set in the header. Default is for ICMP(protocol 1), IGMP(protocol 2), and IP-in-IP(protocol 4). TCP is protocol 6 and UDP is protocol 17.
-PR - ARP Sscan - works in LAN, advantage over IP filtered fw.
--spoof-mac - this allows the host mac address to be spoofed.
-v - verbose - the more v's the more verbose
--source-port<portnum> - setting a constant source port.
--data-length<length> - this option adds <length> random bytes to every packet and works with tcp, udp and icmp scan types.
--ttl<value> - time to live value.
--max-parallelism, --min-parallelism <value> - these set the number of outstanding probes there can be at anyone time.
-oA -oN -oX -oG - output types All, normal, xml, grepable.
--randomize-hosts - may make the scan less conspicuous, but results may be more difficult to follow.
--reason - this provieds which discovery method the target responded to.
--packet-trace - this provides information on every packet sent.
-D - decoy
-S<source\_ip\_address>, -e<sending\_device\_name>
-F - this is the fast option. Instead of scanning 1000 ports as per default only the top 100 will be scanned.
--append-output - this will append output to previous file in -oN, -oX or -oG.

** Dry Run
> nmap -sL -n <targets>
this will show which ips will be scanned before you start.

** Resume an aborted scan
> nmap --resume <-oNfile/-oGfile>
no other arguments other than --resume. Only -oN and -oG can be used.

** Examples:
*** This will locate random web servers
> nmap -sS -PS80 -iR 0 -p 80

*** this is an ipv6 scan
> nmap -6 2001:800:40:2a03::3

*** list of assigned dhcp ip addrs
> egrep '\^lease' /var/lib/dhcp/dhcp.leases | awk '{print $2;}' | nmap
-iL -

Obtain the list of assigned DHCP IP addresses and feed them directly to
nmap for scanning a hyphen is passed to -iL to read from std input.

*** Ping Network

> nmap -T5 -sP x.x.x.x

> nmap -PN -T4 --traceroute <address>

*** Reverse-DNS and traceroute scan

> nmap -n -sP -PR --packet-trace --send-eth <addtess>

*** arp scan (-sP -PR)

> nmap -n -sL -iR 50000 -oN - | grep 'report' | awk '{print $5;}' >
50K\_ips

*** Random List of 50000 ip addresses

> nmap -sP -PE -PP -PS21,22,23,25,80,113,35439 -PA80,113,443,21004 -T4
--source-port 53 -iL <file> -oA <output\_filename>

this is an extensive scan that uses a file to provide the ip address and outputs to all 4 types

> nmap -p0- -v -A -T4 <address>

this is an aggressive scan that will scan every port, and enables aggressive tests (-A) such as os detection. Ok if stealth isn't necessary
* Lecture
* Tutorial
* Books
[[file://home/crito/Documents/Security/Tools/Nmap_Essentials.pdf][Nmap Essentials]]
* Links


