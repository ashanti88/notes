#+TAGS: net anal sec recon


* nmap							 :net:anal:sec:recon:
* Description
* Usage

> nmap <options> <search\_address>

** Search Types
-sS - syn scan. This is the default scan.
-sT - connect scan
-sU - udp scan.
-sL - list scan - this option will enumerate every ip address in the network block and does a dns reverse lookup (unless -n is issued)
-sV - version scan.
-sP - ping scan
-sC - scripting engine
-sF - fin scan
-sX - xmas scan
-sN -
-sA - ack scan
-sW - window scan - similar to ack scan bit is able to detect open versus closed ports against certain machines.
-sM - Maimon scan - similar to FIN scan, used to get by fw, but works on only a few systems.
-sI - idle scan - slow and complex
-sO - IP scan - determines which IP protocols are surrported by thetarget.
-b - ftp bounce scan - deprecated scan type. tricks ftp servers into performing port scanx by proxy. Most ftp servers are now patched against this.

** Options
-p - decides which ports to scan. Default is to scan 1 - 1024, plus 600 other ports specified in the nmap database. -p- is short for -p1-65535.
-pT:x,yz,U:x,y,z - this specifies which protocol and port number to scan.
-p[1024-] - when bracketed only ports that are in the nmap-services file will be scanned.
-A - equivalent to -sV -sC -O --traceroute
-O - os detection
-T<num> - timing mode - Â lower the number slower the scan. T4 equivalent to -T aggressive
-oA <file> - outputs to all formats
-PN - no ping
-n - no name resolution
-R - resolve all, even machines that are down
--system-dns - by default nmap uses the dns configured on the host machine. This will use the system resolver, it is slow and rarely useful.
--dns-servers <server1>, <serverN> - this uses the stated servers to relove dns queries.
-iL - input from list. this allows a file to be used to provide hosts to be scanned.
-iR - choose targets at random.
--exclude - exclude a certain host from the scan. this is a comma seperated list.
--excludefile - this file contains addresses that shouldn't be scanned.
--traceroute - will have traceroute run on the target
-PS - TCP SYN Ping - this sends a a tcp packet with syn flag set. the default port is 80 but any other port can be set (-sP has to be set and it replaces the default ping detection method).
-PA - TCP ACK Ping - similar to above but the ack flag is set. Using ack can fool the fw to thinking that a connection is established between host and target.
-PU - UDP Ping - this scan is similar to PS and PA scans, it sends an empty udp packet to the given port. By default it is 31338 which unlikely to be in use. The advantage of this scan is that it by passes fw that scan for only tcp.
-PE - this ping scan uses icmp echo request packets to determine an up host.
-PP - this ping scan uses icmp timestamp request to determine an up host.
-PM - this ping scan uses icmp adderess mask query to determine an up host.
-PO<protocol\_list> - this scan sends ip packets with the specified number set in the header. Default is for ICMP(protocol 1), IGMP(protocol 2), and IP-in-IP(protocol 4). TCP is protocol 6 and UDP is protocol 17.
-PR - ARP Sscan - works in LAN, advantage over IP filtered fw.
--spoof-mac - this allows the host mac address to be spoofed.
-v - verbose - the more v's the more verbose
--source-port<portnum> - setting a constant source port.
--data-length<length> - this option adds <length> random bytes to every packet and works with tcp, udp and icmp scan types.
--ttl<value> - time to live value.
--max-parallelism, --min-parallelism <value> - these set the number of outstanding probes there can be at anyone time.
-oA -oN -oX -oG - output types All, normal, xml, grepable.
--randomize-hosts - may make the scan less conspicuous, but results may be more difficult to follow.
--reason - this provieds which discovery method the target responded to.
--packet-trace - this provides information on every packet sent.
-D - decoy
-S<source\_ip\_address>, -e<sending\_device\_name>
-F - this is the fast option. Instead of scanning 1000 ports as per default only the top 100 will be scanned.
--append-output - this will append output to previous file in -oN, -oX or -oG.

** Dry Run
> nmap -sL -n <targets>
this will show which ips will be scanned before you start.

** Resume an aborted scan
#+BEGIN_SRC sh
nmap --resume nmap_scan.txt
#+END_SRC
- no other arguments other than --resume. 
- Only -oN and -oG can be used.

** Examples:
*** This will locate random web servers
> nmap -sS -PS80 -iR 0 -p 80

*** this is an ipv6 scan
> nmap -6 2001:800:40:2a03::3

*** list of assigned dhcp ip addrs
> egrep '\^lease' /var/lib/dhcp/dhcp.leases | awk '{print $2;}' | nmap
-iL -

Obtain the list of assigned DHCP IP addresses and feed them directly to
nmap for scanning a hyphen is passed to -iL to read from std input.

*** Ping Network

> nmap -T5 -sP x.x.x.x

> nmap -PN -T4 --traceroute <address>

*** Reverse-DNS and traceroute scan

> nmap -n -sP -PR --packet-trace --send-eth <addtess>

*** arp scan (-sP -PR)

> nmap -n -sL -iR 50000 -oN - | grep 'report' | awk '{print $5;}' >
50K\_ips

*** Random List of 50000 ip addresses

> nmap -sP -PE -PP -PS21,22,23,25,80,113,35439 -PA80,113,443,21004 -T4
--source-port 53 -iL <file> -oA <output\_filename>

this is an extensive scan that uses a file to provide the ip address and outputs to all 4 types

> nmap -p0- -v -A -T4 <address>

this is an aggressive scan that will scan every port, and enables aggressive tests (-A) such as os detection. Ok if stealth isn't necessary
*** Verbosity/Debug
v       - will increase verbosity
shift-v - will decrease verbosity
d       - will increase debug level
shift-d - will decrease debug level
*** traceroute
** Scan by Service
*** FTP Scan 
#+BEGIN_SRC sh
nmap --scan-delay 5s -g 53 -iL 21.txt -Pn -n -sS --open -p21 --script=banner,ftp-annon,ftp-bounce
#+END_SRC

*** SSH Scan
#+BEGIN_SRC sh
nmap --scan-delay 5s -g 53 -iL 22.txt -Pn -n -sS --open -p22 --script=sshv1,ssh2-enum-algos
#+END_SRC

*** DNS Scan
#+BEGIN_SRC sh
nmap --scan delay 5s -g 53 -iL 53.txt -Pn -n -sS -sU --open -p53 --script=dns-cache-snoop,dns-service-discovery,dns-update,dns-zone-transfer,dns-recursion
#+END_SRC
check av vendors list against cache

*** DHCP Scan
#+BEGIN_SRC sh
nmap --scan-delay 5s -g 53 -iL 67.txt -Pn -n -sS --sU --open -p67 -sC
#+END_SRC

*** MSSQL Scan
#+BEGIN_SRC sh
nmap --scan-delay 5s -g 53 -iL msql.txt -Pn -n -sS -sUV --open -p T:1433,U:1434 --script=ms-sql-info,ms-sql-empty-password
#+END_SRC

*** NFS Scan
#+BEGIN_SRC sh
nmap --scan-delay 5s -g 53 -iL 111.txt -Pn -n -sS --open -p111 --script=rpcinfo,nfs-ls,nfs-showmount,nfs-statfs
#+END_SRC

*** NetBIOS Scan
#+BEGIN_SRC sh
nmap --scan-delay 5s -g 53 -iL 137.txt -Pn -n -sS -sU --open -p137 --script=nbstat
#+END_SRC

*** SMB Scan
#+BEGIN_SRC sh
nmap --scan-delay 5s -g 53 -iL smb.txt -Pn -n -sS --open -p139,445 --script="smb-enum*",smb-os-discovery,smb-security-mode,smb-server-stats,smb-system-info,smbv2-enabled,smb-check-vulns -script-args safe=1
#+END_SRC

*** Web Scan
#+BEGIN_SRC sh
nmap --scan-delay 5s -g 53 -iL web.txt -Pn -n -sS --open -p80,443,8000,8080,8443 --script=http-date,http-enum,http-favicon,http-headers,http-open-proxy,http-php-version,http-robots.txt,http-title,http-trace,http-vhosts,http-vmware-path-vuln,citrix-enum-apps-xml,citrix-enum-server-xml --stats-every 30s
#+END_SRC

*** SNMP Scan
#+BEGIN_SRC sh
nmap --scan-delay 5s -g 53 -iL 161.txt -Pn -n -sS -sU --open -p161 --script=snmp-interfaces,snmp-netstat,snmp-processes,snmp-sysdescr,snmp-win32-services,snmp-win32-shares,snmp-win32-software
#+END_SRC

*** LDAP Scan
#+BEGIN_SRC sh
nnmap --scan-delay 5s -g 53 -iL 389.txt -Pn -n -sS --open -p389 --script=ldap-rootdse
#+END_SRC

*** SSL Scan
#+BEGIN_SRC sh
nnmap --scan-delay 5s -g 53 -iL 443.txt -Pn -n -sS --open -p443 --script=banner,ssl-cert,ssl-enum-ciphers,sslv2,ssl-heartbleed
#+END_SRC
#+BEGIN_SRC sh
nmap --traceroute 10.0.0.0/24
#+END_SRC
** Produce HTML report
- getting a html report from nmap report
#+BEGIN_SRC sh
nmap -O -sV -sC -oX nmap-scan.xml 192.168.56.101
cp /usr/share/nmap/nmap.xsl .
#+END_SRC
We need the nmap.xsl as it is the stylesheet for the xml file

* Lecture
** [[https://www.youtube.com/watch?v%3DM-Uq7YSfZ4I][Mastering the Nmap Scripting Engine - Fyodor & David Fifield]]
   
- nmap -A -T4 scanme.nmap.org
  - A - Advanced options
    - os detection
    - version detection
    - nse 
      
- using the ssh-hostkey script you will be given a key for the ssh server, this is handy if the machine is running dhcp and cahnges ip
  
- Large Scale Scan - SMB/MSRPC Scripts
  13 script suite
    - Informational
       smb-os-discovery
       smb-server-stats
       smb-system-info
       smb-security-mode
    - Detailed Enumeration
       smb-enum-users
       smb-enum-domains
       smb-enum-groups
       smb-enum-processes
       smb-enum-sessions
       smb-enum-shares
    - More intrusive
       smb-brute
       smb-check-vulns     
       smb-psexec
  
+ Writing NSE Scripts
  - lua
  - protocl/helper libs
    - 45, including DNS, HTTP, MSRPC, SNMP etc
  - protocol brute forcers
    
+ Speed up scan
  -n     - turn off name resolver
  -Pn    - turn of ping scan
  -p X   - choose specific ports
  -open  - only tell me about ports that are open
  - 66.171.10.- same as 66.171.10.0/24

+ unpwdb
  - real measured results

- http-brute - this script can will use unpwdb to brute for user/password challenge

* Tutorial
** KY ISSA NMAP 
*** [[https://www.youtube.com/watch?v%3D22Ad04Aw-Bo][Part 1: TCP IP And Basics of Nmap]]
*** [[https://www.youtube.com/watch?v%3DhdkKy3vJ0vM][Part 2: TCP IP And Basics of Nmap - Adrian Crenshaw]]
- Nmap allows for different pings to be sent
  -sn -No port scan
  -PR -ARP ping
  -Pn -No ping (can be slow, ARP always done)
  -PU -udp ping
  -PT -tcp ping
  -PI -icmp echo ping
  -PS -syn ping, default port 80, altered with -PS22-25
- using PI is less easily detected as no full connection is made  
  
- nmap range scan without port scan
#+BEGIN_SRC sh
nmap -sn 10.0.0.*
#+END_SRC

- scan only the first 100 ports
#+BEGIN_SRC sh
nmap -F 10.0.0.10
#+END_SRC

- return only the open ports
#+BEGIN_SRC sh
nmap -sS -sU 10.0.0.100-125 -p T:80,U:53 --open
#+END_SRC

- scan list queries dns reverse lookup (don't have to touch the target)
#+BEGIN_SRC sh
nmap -sL 10.0.0.*
#+END_SRC

*** [[https://www.youtube.com/watch?v%3DP5uRFxFXpyg][Part 3: OS And Service Fingerprinting - Jeremy Druin]]
*** [[https://www.youtube.com/watch?v%3D0X3sw_OKwdM][Part 4: OS And Service Fingerprinting - Jeremy Druin]]
- using os option
--osscan-limit will reduce the time spent of os detection
#+BEGIN_SRC sh
nmap -O --osscan-limit 10.0.0.1
#+END_SRC

--osscan-guess will be more aggressive in its approach of detection
#+BEGIN_SRC sh
nmap -O --osscan-guess 10.0.0.1
#+END_SRC

*** [[https://www.youtube.com/watch?v%3DsLXurGHuz0Q][Part 5: Kicking Ass With Nmap]]
Methodology
- Create subnet lists - connect to network
  - ifconfig
  - /etc/resolv.conf
  - Netdiscover
  - Wireshark
  - Dig
- Ping scan to create list of live ips
  - nmap -sP -PI
  - cut the network up /16 at a time
- Syn Scan using timing and other evasion techniques one port at a time
  - cat hostlist.txt | sort -R | nmap -sS -p389 -oG myscan -iL -
- Use nmap scripts against the hosts one by one in each port.txt file
  - nmpa -Pn -n --open -p21 --script ftp-anon,ftp-bounce,ftp-libopie -iL 21.txt
    
- To findout about nmap scripts use http://nmap.org/nsedoc/scripts/
- Also nmap --script-help "ftp-*"  

- IP Geo Locate script
#+BEGIN_SRC sh
nmap -Pn -p80 --script ip-geolocation-* gitfshop.co.uk
#+END_SRC

Recommends:
http://blog.spiderlabs.com

* Books
[[file://home/crito/Documents/Security/Tools/Nmap_Essentials.pdf][Nmap Essentials]]

* Links


