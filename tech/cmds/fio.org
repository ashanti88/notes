#+TAGS: sys anal io


* fio
Home Page: [[http://freecode.com/projects/fio/][freecode.com/fio]]

* Description
Fio is a powerful benchmarking tool. It has support for 19 different type of I/O engines. It can work on block devices and files.
  - Platforms:
    - Linux, FreeBSD, NetBSD, OpenBSD, OS X, OpenSolaris, AIX, HP-UX, Android and Windows.
    
  - hdparam isn't the best tool to benchmark disk once a filesystem has been set on a partition.
  - fio allows for very precise defined io patterns.

* Usage 

1. First a directory has to be created that fio can use.
  - fio will create files and use this directory for testing.
  - In this directory now create a configuration file
#+BEGIN_EXAMPLE
[global]
ioengine=posixaio
rw=readwrite
size=1g
directory=${HOME}/fio
thread=1
#+END_EXAMPLE

2. Now we run the created file 
#+BEGIN_SRC sh
fio file_name.fio --output= file_output.txt
#+END_SRC
or
#+BEGIN_SRC sh
fio file_name.fio --output-format=json --output=<name.json
#+END_SRC

** Reading Output
- Higher output for bandwidth and lower values for latency constitute better results.

** Tests
- Random read of 128mb
[random-read]
rw=randread
size=128m
directory=/tmp/fio-testing/data


- Random read AIO
[random-read-aio]
ioengine=libaio
iodepth=8
direct=1
invalidate=1

invalidate - this causes the kernel buffer and page cache to be invalivated.
runtime - specifiy time for how long the test should run.
thinktime - inserts delay between IO requests, useful for simulating real world applications, where data would also be being read from disk.

* Lecture
* Tutorial
* Books
* Links
[[https://www.linux.com/learn/inspecting-disk-io-performance-fio][Inspecting disk IO performance with fio]]


