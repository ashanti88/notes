#+TAGS: sec enc


* gpg								    :sec:enc:
* Description

* Usage
** Creating a key pair
#+BEGIN_SRC sh
gpg2 --gen-key
#+END_SRC
This command will lead you through some questions

i)Name
ii)email
iii)comment
iv)passphrase

** Importing keys from server
#+BEGIN_SRC sh
gpg --search-keys --keyserver keyserver.ubuntu.com 'Key-ID'
#+END_SRC
or
#+BEGIN_SRC sh
gpg --search-keys --keyserver keyserver.ubuntu.com 'E-Mail ID'
#+END_SRC
or
#+BEGIN_SRC sh
gpg --search-keys --keyserver keyserver.ubuntu.com 'Real Name'
#+END_SRC

** Importing keys from a file
#+BEGIN_SRC sh
gpg --import myfriends\_pubkey.gpg
#+END_SRC

** To list all keys*
#+BEGIN_SRC sh
gpg --list-keys
#+END_SRC

** Encrypt a file to be sent using friends pub key
#+BEGIN_SRC sh
gpg --encrypt --recipient 'Friends pub key id' file\_to\_encrypt.txt
#+END_SRC
This will produce a file called file\_to\_encrypt.txt.gpg and will contain some binary data.
If you don't want any binary output use the --armor option. This will create an ASCII file.

** Encrypting a file with your own public key
If they have your public key, but you don't have theirs
#+BEGIN_SRC sh
gpg --encrypt --recipient 'Your id' file\_to\_encrypt.txt
#+END_SRC

Best method if both parties have each others public keys
#+BEGIN_SRC sh
gpg -e -u 'Your id' -r 'Their id' file\_to\_encrypt.txt
#+END_SRC

** Decrypting a file
#+BEGIN_SRC sh
gpg --decrypt file\_to\_encrypt.txt.gpg > secret.txt
#+END_SRC
The file secret.txt will now contain the actual text file.

** Printing keys to files
#+BEGIN_SRC sh
gpg --export -a 'Name id' > public.key
#+END_SRC
or
#+BEGIN_SRC sh
gpg --export-secret-key -a 'Name id' > private.key
#+END_SRC

** Using Keyserver
check that the server got the key
#+BEGIN_SRC sh
gpg --keyserver https://pgp.mit.edu/ --send-keys A5148EED
> gpg --keyserver https://pgp.mit.edu/ --search-key A5148EED
#+END_SRC

** Revoke keys
When a key pair are generated a revokation certificate shuld also be
created in case of any compromise.
#+BEGIN_SRC sh
gpg --gen-revoke <uid>
#+END_SRC
this is ask several questions then print to stdout a crt.
copy this crt to a file and store safely.

- Using revoke
#+BEGIN_SRC sh
gpg --import <revoke\_crt>
#+END_SRC
this imports the revoke into your keyring
#+BEGIN_SRC sh
gpg --keyserver  https://pgp.mit.edu/ --send-keys A5148EED
#+END_SRC

check the verbose index page on <key\_server> you'll see *** key revoked
+ on the first line of the details.
* Lecture
* Tutorial
* Books
* Links
