#+TAGS: network_manager network_tool wifi_tool wifi terminal network_manager ncurces_frontend_network_manager nm_connection_editor network_manager_gui


* nmcli
HomePage: [[https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/Networking_Guide/sec-Network_Config_Using_nmcli.html][nmcli]]

* Files
/etc/netctl - this directory contains all the networking configuration files

* Description
+ Network Manager Command Line Interface
This tool allows for changes to the network via the cmd line.
The Networkmanager command line interface, nmcli, can be used by both users and scripts for controlling NetworkManager.
* Usage
- show all connections
#+BEGIN_SRC sh
nmcli con show
#+END_SRC

** New Configurations
- add a new configuration
#+BEGIN_SRC sh
nmcli con add con-name "myconnection" autoconnect yes type type ethernet ifname eth1
#+END_SRC
- this sets autoconnect on reboot
- by default dhcp is set to on (BOOTPROTO=dhcp)

- add a new configuration with a static addr
#+BEGIN_SRC sh
nmcli con add con-name "myconnection-static" type type ethernet ifname eth1 ip4 10.0.0.16 gw4 10.0.0.1
#+END_SRC
- by default dhcp is set to on (BOOTPROTO=none)

- modify a configuration
#+BEGIN_SRC sh
nmcli con mod "myconnection" connection.autoconnect no
#+END_SRC
this will turn autoconnect at boot time off

- remove a configuration
#+BEGIN_SRC sh
nmcli con down myconnection
nmcli con del "myconnection"
#+END_SRC
this will bring down the connection and remove the configuration file

** Modify the Current ip
#+BEGIN_SRC sh
nmcli con mod $NAME ipv4.addresses "192.168.0.6"
#+END_SRC
** To Add an ip Address
#+BEGIN_SRC sh
nmcli con mod $NAME +ipv4.addresses "192.168.0.6"
#+END_SRC

** Change a connections DNS nameserver
#+BEGIN_SRC sh
nmcli con mod "System eth0" +ipv4.dns 8.8.8.8
#+END_SRC

** Diagnostics
*** View all interfaces
#+BEGIN_SRC sh
nmcli dev status
#+END_SRC

*** Show all network connections
#+BEGIN_SRC sh
nmcli con show
#+END_SRC
   
*** View all Parameters for Connection
#+BEGIN_SRC sh
nmcli -p con show $NAME
#+END_SRC

*** View all WiFi Connections
#+BEGIN_SRC sh
nmcli dev wifi list
#+END_SRC
*** View all the UUIDs
#+BEGIN_SRC sh
nmcli con show
#+END_SRC
** Operations
*** Connect
#+BEGIN_SRC sh
nmcli dev wifi connect SSID_name password pa$$w0rd
#+END_SRC
if password is already set in netctl config then it isn't required, an error will be thrown saying it's required but the connection will still complete

- use a specific interface
#+BEGIN_SRC sh
nmcli dev wifi connect SSID_name password pa$$w0rd iface wlan1 
#+END_SRC

*** Disconnect
#+BEGIN_SRC sh
nmcli dev disconnect iface eth0
#+END_SRC

*** Switch Wifi Off
#+BEGIN_SRC sh
nmcli r wifi off
#+END_SRC

** Network Teaming
- add the team
#+BEGIN_SRC sh
nmcli con add type team con-name lateam0 ifname lateam0 config '{"runner": {"name":"activebackup"}}'
#+END_SRC

- add an ip address to lateam0
#+BEGIN_SRC sh
nmcli con mod lateam0 ipv4.addresses '192.168.0.10/24'
#+END_SRC

- tell Network Manager that the ip is static
#+BEGIN_SRC sh
nmcli con mod lateam0 ipv4.method manual
#+END_SRC

- add interfaces to the team
#+BEGIN_SRC sh
nmcli con add type team-slave con-name lateam0-port1 ifname enp0s8
nmcli con add type team-slave con-name lateam0-port2 ifname enp0s9
#+END_SRC

- bring up the team
#+BEGIN_SRC sh
nmcli con up lateam0-port1
nmcli con up lateam0-port2
#+END_SRC

- check the state of the team
#+BEGIN_SRC sh
teamdctl lateam0 state
#+END_SRC
both should be up

- now bring down the active port
#+BEGIN_SRC sh
nmcli con down lateam0port1
#+END_SRC
this will promote the second port as the active port
  - if the first port was brought back up the second port would remain the active port as not to effect connections

** Managing IPv6
- adding ipv6 connection
#+BEGIN_SRC sh
nmcli con add con-name "ipv6-connection" type ethernet ifname eth1
#+END_SRC

- create ipv6 address
#+BEGIN_SRC sh
nmcli con mod eth1 ipv4.addressses 192.168.10.100/34
nmcli con mod eth1 ipv4.method manual
nmcli con mod eth1 ipv6.addresses fddb:f112:ab1e::c0a8:6547/64
nmcli con mod eth1 ipv6.method manual
nmcli con up eth1
#+END_SRC

- view the interface eth1
#+BEGIN_SRC sh
ip a
#+END_SRC
this should now show the new settings

- confirm that the address is correct
#+BEGIN_SRC sh
ping6 -I eth1 fddb:f112:ab1e::c0a8:6547
#+END_SRC

* Alternatives
curses: [[file://home/crito/org/tech/cmds/nmtui.org][nmtui]]
ncurses: [[file://home/crito/org/tech/cmds/wifi-menu.org][wifi-menu]]
sysd: [[file://home/crito/org/tech/cmds/netctl.org][netctl]] (terminal)

* Lecture
* Tutorial
* Books
* Links
[[https://fedoraproject.org/wiki/Networking/CLI][FedoraProject - Networking/CLI]]





* nmtui
Home Page: [[https://access.redhat.com/documentation/en-US/Red_Hat_Enterprise_Linux/7/html/Networking_Guide/sec-Networking_Config_Using_nmtui.html][nmtui]]
* Description
Network Manager Text User Interfaceion
- this tool allows for an curses environment to adjust netwrok settings.

* Usage
* Lecture
* Tutorial
* Books
* Links
  

* nm-connection-editor
* Description
* Usage
* Lecture
* Tutorial
* Books
* Links
