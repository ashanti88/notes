#+TAGS: systemd systemctl


* systemctl
* Files
/usr/lib/systemd/ - this is the default as shipped configration files (never edit these)
/etc/systemd      - this is where system changes should be made (these take presidence over /usr/lib/systemd)

* Description
* Usage
- get an overview of the current system
#+BEGIN_SRC sh
systemctl status
#+END_SRC

- view a unit file
#+BEGIN_SRC sh
systemctl cat httpd.service
systemctl cat multi-user.target
#+END_SRC


** System
- Reboot, Suspend and Shutdown
#+BEGIN_SRC sh
systemctl reboot
systemctl suspend
systemctl poweroff
#+END_SRC
   
- Change runlevel
Though runlevels is legacy concept, it marrys well to the systemd idea of targets

- switch to what would be runlevel 3 in sysv
#+BEGIN_SRC sh
systemctl isolate multi-user.target
#+END_SRC
or
#+BEGIN_SRC sh
systemctl isolate runlevel3.target
#+END_SRC

- switch to what would be runlevel 5 in sysv
#+BEGIN_SRC sh
systemctl isolate graphical.target
#+END_SRC
or
#+BEGIN_SRC sh
systemctl isolate runlevel5.target
#+END_SRC

- Setting defualt runlevel
systemd uses symlinks to point to the default runlevel

- setting runlevel 3 to be default
#+BEGIN_SRC 
ln -sf /lib/systemd/system/multi-user.target /etc/systemd/system/default.target
#+END_SRC

- setting runlevel 5 to be default
#+BEGIN_SRC 
ln -sf /lib/systemd/system/graphical.target /etc/systemd/system/default.target
#+END_SRC

- This command should be used
#+BEGIN_SRC sh
systemctl set-default multi-user.target
#+END_SRC
this will remove and current default symlink and create the new symlink that points from multi-user

** Targets
- common Targets
  - multi-user.target - similar to runlevel 3 (multi-user with networking)
  - graphical.target  - similar to runlevel 5 (graphical) 
  - emergency.target  - boots into root shell, mounts fs as read-only
  - rescue.target     - single-user environment
  - basic.target      - basic system, used during the boot process before another target takes over
  - sysint.target     - system initialization

- Show all active Targets
#+BEGIN_SRC sh
systemctl -t target
#+END_SRC
or
#+BEGIN_SRC sh
systemctl list-units --type=target
#+END_SRC

- Show all Targets installed on the disk
#+BEGIN_SRC sh
systemctl -t target -a
#+END_SRC
or
#+BEGIN_SRC sh
systemctl list-units --type=target --all
#+END_SRC

- Find the default target
#+BEGIN_SRC sh
systemctl get-default
#+END_SRC

- Show the service and target dependencies of a Target
#+BEGIN_SRC sh
systemctl list-dependencies multi-user.target
#+END_SRC

- View all available systemd configuration units
#+BEGIN_SRC sh
systemctl -t help
#+END_SRC

- List all active service unit configuration files
#+BEGIN_SRC sh
systemctl --type=service
#+END_SRC
or
#+BEGIN_SRC sh
systemctl list-units --type=service
#+END_SRC

** Services
- Stop, Start and Restart a Service
#+BEGIN_SRC sh
systemctl stop sshd.service
systemctl start sshd.service
systemctl restart sshd.service
#+END_SRC

- Current State of a Service
#+BEGIN_SRC sh
systemctl status sshd.service
systemctl is-active sshd.service
#+END_SRC

- Enable a Service
#+BEGIN_SRC sh
systemctl enable sshd.service
#+END_SRC

- Disable a Service
#+BEGIN_SRC sh
systemctl disable sshd.service
#+END_SRC
- too ensure that the service isn't started by another service use the mask option

- Masking a Service
#+BEGIN_SRC sh
systemctl mask sshd.service
#+END_SRC

- List All Services
#+BEGIN_SRC sh
systemctl list-unit-files --types=service
#+END_SRC
This will show you all the services and their current state

- List All Enabled services
#+BEGIN_SRC sh
systemctl list-unit-files --type=service | grep enabled
systemctl --user list-unit-files --type=service | grep enabled
#+END_SRC
--user - only show user specific service

- List Dependencies for a Service
#+BEGIN_SRC sh
systemctl list-dependencies sshd.services
#+END_SRC

- Remove a Service
#+BEGIN_SRC sh
systemctl stop firewalld.service
systemctl disable firewalld.service
rm /etc/systemd/system/firewalld.service
systemctl daemon-reload
systemctl reset-failed
#+END_SRC
- There may also be symlinks that need to be removed rm /etc/systemd/system/firewalld.service

-  View enabled and disabled settings for all units of the type service
#+BEGIN_SRC sh
systemctl list-unit-files --type=service --all
#+END_SRC

- List all service configuration files acive or not
#+BEGIN_SRC sh
systemctl list-units --all
systemctl list-units --type=service --all

- Reload systemd after a unit file is added or is edited
#+BEGIN_SRC sh
systemctl deamon-reload
#+END_SRC

** Timers
- list all timers on a system
#+BEGIN_SRC sh
systemctl list-timers --all
#+END_SRC

- view a timer unit file
#+BEGIN_SRC sh
systemctl cat systemd-tmpfiles-clean.timer
#+END_SRC

*** Create a timer that will be called everyday
- create the timer unit file /etc/systemd/system/web-backup.timer
#+BEGIN_EXAMPLE
[Unit]
Description=Fire off the backup

[Timer]
OnCalendar=*-*-* 22:10:00
Persistent=true
Unit=web-backup.service

[Install]
WantedBy=multi-user.target
#+END_EXAMPLE
*-*-* - Year-Month-Day

- now enable and start the timer
#+BEGIN_SRC sh
systemctl start web-backup.timer
#+END_SRC

- confirm that the timer has been added
#+BEGIN_SRC sh
systemctl lits-timers --all
#+END_SRC

* Lecture
* Tutorial
* Books
* Links
[[https://linuxconfig.org/working-with-systemd-targets-on-rhel7-linux-beginners-cheatsheet][Working with systemd targets on RHEL7 - LinuxConfig]]
