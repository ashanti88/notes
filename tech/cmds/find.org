#+TAGS: find_file search


* find
GNU: [[https://www.gnu.org/software/findutils/manual/html_mono/find.html#index-g_t_002dmaxdepth-44][gnu.org/find]]
* Description
Used for finding files by file name. 
* Usage

> find <start_point> <options> <filename>


** Find file by name
We can use either
  - name - casesensitive
  - iname - case insensitive
Regular expression symbols can be used    
- find all files in current and sub directories that end in .conf
#+BEGIN_SRC sh
find . -name "*.conf"
#+END_SRC
** Find file by type
Types that can be searched for
  - f - regular file
  - d - directory
  - l - symbolic link
  - c - character device
  - b - block device

- find all directories and sub-directories
#+BEGIN_SRC sh
find . -type d 
#+END_SRC

- search by file can also be used to search for the .conf files like above
#+BEGIN_SRC 
find . -type f -name "*.conf"
#+END_SRC

** Find file by regex
- this will find all files in the current directory and subdirectories 
#+BEGIN_SRC sh
find . -regex ".*django.*"
#+END_SRC
As find will search the fqdn .* has to be the first term

** Find file by size
We can use the size flag with size descriptions
  - c - bytes
  - k - kilobytes
  - M - Megabytes
  - G - Gigabytes
  - b - 512-byte-block
    
- find all files above 100MB
#+BEGIN_SRC sh
find . -size +100M
#+END_SRC

- find all files that are exactly 1MB
#+BEGIN_SRC sh
find . -size 1M
#+END_SRC

** Find by user
#+BEGIN_SRC sh
find . -maxdepth -user frank -name "*.py"
#+END_SRC
This will find all frank's python files in current directory

** Find file by group or user
- find all files owned by accounting group
#+BEGIN_SRC sh
find / -group accounting
#+END_SRC

- find all files owned by jim
#+BEGIN_SRC sh
find / -user jim
#+END_SRC

** Find file at certain depth
To descend into sub-directories use the maxdepth flag
#+BEGIN_SRC 
find . -maxdepth 1 -type f -name "history"
#+END_SRC
1 will search in the set directory
2 will move down one directory etc...
** Find file of a permission
#+BEGIN_SRC sh
find /home -perm 777
#+END_SRC

- find files with 777 and change to 555
#+BEGIN_SRC sh
find /home -perm 777 -exec chmod 555 {} \;
#+END_SRC

- find files with the suid set
#+BEGIN_SRC sh
find / -perm -4000
#+END_SRC
adding the - before the 4 means that it can have any combintion of permissions with the suid set

** Find by file age
- files that have been accessed in less than a day
#+BEGIN_SRC sh
find /etc -atime -1
#+END_SRC

** Execute a command on found files
- delete a found files
#+BEGIN_SRC sh
find . -name "mytest.txt" -exec rm -rf {} \;
#+END_SRC
or
#+BEGIN_SRC sh
find . -iname "my*.txt" -delete
#+END_SRC

- chmod all found files
#+BEGIN_SRC sh
find . -iregex "mytest.txt" -exec chmod 777 {} \;
#+END_SRC

** Count files in directory recursively
#+BEGIN_SRC sh
find . -type f | wc -l
#+END_SRC
** Print only the file name
#+BEGIN_SRC sh
find . -type f -printf '%f\n
#+END_SRC
** Find any binary that has the set uid
#+BEGIN_SRC sh
find /usr/bin -perm -4000 -exec cp {} /root/bkup \;
#+END_SRC
this will make a copy of every instance with set uid to /root/bkup

** Follow symbolic links
#+BEGIN_SRC sh
find -P /home/user/ -name 
#+END_SRC
** Find broken links
- using xtype
#+BEGIN_SRC sh
find . -xtype l
#+END_SRC
This is not available on versions of find, but tends to be the best

- using test
#+BEGIN_SRC sh
find . -type l ! -exec text e {} \; -print
#+END_SRC

- using rm
#+BEGIN_SRC sh
rm $(find . -type l -exec sh -c "file -b {} | grep -q ^broken" \; -print)
#+END_SRC

* Lecture
* Tutorial
* Books
* Link
