#+TAGS: libvirt virsh virt-manager vm virtual_machine


* libvirt
HomePage: http://wiki.libvirt.org/page/Main_Page
* Files
/etc/libvirt/     - this is there the configuration files can be found
/var/lib/libvirt/ - this holds variable data for libvirt
/var/lib/libvirt/images/ - default home for OS images for VM creation

* Cmds
** virsh
- list all VMs running on machine
#+BEGIN_SRC sh
vish list --all
#+END_SRC

- stop a running VM
#+BEGIN_SRC sh
virsh destroy name_of_vm
#+END_SRC

- start a VM
#+BEGIN_SRC sh
virsh start name_of_vm
#+END_SRC

- edit the configuration of VM
#+BEGIN_SRC sh
virsh edit name_of_vm
#+END_SRC
This is the prefered method to edit, rather than using vim on the config file

- start a vm on startup
#+BEGIN_SRC sh
virsh autostart UbuntuTrustyTahr
#+END_SRC

- view all of the virtual networks
#+BEGIN_SRC sh
virsh net-list --all
#+END_SRC

- dump the xml files of a specific network
#+BEGIN_SRC sh
virsh net-dumpxml isolated
#+END_SRC
this can be used to created new networks

- check for all current snapshots for a specific VM
#+BEGIN_SRC sh
virsh snapshot-list virtual_machin_name
#+END_SRC
** virt-manager
HomePage: https://virt-manager.org/
This is a GUI to manage VMs

** virt-install 
A command line tool which provides an easy way to provision operating systems into virtual machines.

** virt-viewer 
A lightweight UI interface for interacting with the graphical display of virtualized guest OS. It can display VNC or SPICE, and uses libvirt to lookup the graphical connection details.

** virt-clone 
A command line tool for cloning existing inactive guests. It copies the disk images, and defines a config with new name, UUID and MAC address pointing to the copied disks.

** virt-xml 
A command line tool for easily editing libvirt domain XML using virt-installâ€™s command line options.

** virt-convert 
A command line tool for converting OVF and VMX VM configurations to run with libvirt.

* Description
* Usage
** Configure CentOS7 to host VMs with libvirt
- packages to install
#+BEGIN_SRC 
yum install virt-manger qemu-kvm qemu-ing
yum install libvirt libvirt-python python-virtinst libvirt-client
#+END_SRC

- enable, startand confirm the status of libvirtd
#+BEGIN_SRC sh
systemctl enable libvirtd
systemctl start libvirtd
systemctl status libvirtd
#+END_SRC

** Have VMs start on boot
- ensure that libvirtd is enabled at boot
#+BEGIN_SRC sh
systemctl enable libvirtd
#+END_SRC

- configure autostart for specific machine in virsh
#+BEGIN_SRC sh
autostart vm-name
#+END_SRC
on the next reboot "vm-name" should start on boot

This needs to be done for every VM that is to start at boot

** Create a VM from the Cmd line
#+BEGIN_SRC sh
qemu-img create -f raw -o size=10G /var/lib/libvirt/qemu/windows7.img
virt-install --name windows7 --ram 1024 --disk path=/var/lib/libvirt/qemu/windows7.img --vcpus 1 --os-type=Windows --network bridge=virbr0 --graphics vnc,port=5999 --console pty,target_type=serial --cdrom /home/user/OS_images/windows7.iso
#+END_SRC
On pressing enter a window will appear and you can begin the installation

** Finding VM process
#+BEGIN_SRC sh
ps aux | grep virt | grep ubuntu
#+END_SRC
just search the name of the VM
** Convert .vdi(Virtualbox) or .vmdk to .qcow2
- firts conver to .raw file
#+BEGIN_SRC sh
VBoxManage clonehd disk.vdi disk.raw --format raw
#+END_SRC

- then convert to .qcow2
#+BEGIN_SRC sh
qemu-img convert -f raw disk.raw -O qcow2 disk.qcow2
#+END_SRC

** Convert .ova for virt-manager
- extract the .ova into the ovf file and the .vdi/.vmdk
#+BEGIN_SRC sh
tar -xvf file.ova
#+END_SRC

- now convert the .vdi or .vmdk to .qcow2
#+BEGIN_SRC sh
qemu-img convert -O qcow2 input.vdi output.qcow2
qemu-img convert -O qcow2 input.vmdk output.qcow2
#+END_SRC

** Disk Images with virt-builder
- first we need to install libguestfs
#+BEGIN_SRC sh
yum install libguestfs
#+END_SRC

- now we tell virt-builder what OS to create
#+BEGIN_SRC sh
virt-build fedora-23 --root-password password:linuxacademy
#+END_SRC
this will go to http://libguestfs.org/download and pull the build script

- now use the created disk to create a VM
#+BEGIN_SRC sh
virt-install --name fedora --ram 1028 --vcpus=1 --disk path=/var/lib/libvirt/qemu/fedora-23.img --import
#+END_SRC
** Creating a isolated network
- provide a name for the new network   
[[file://home/crito/Pictures/org/libvirt_isolated_network.png]]

- create the ip range of the network
[[file://home/crito/Pictures/org/libvirt_isolated_network2.png]]

- we have the option to choose ipv6 address space (this example we don't)
[[file://home/crito/Pictures/org/libvirt_isolated_network3.png]]

- now we choose are network connection, isolated virtual network or forwarded to router
[[file://home/crito/Pictures/org/libvirt_isolated_network4.png]]

- In the networks tab there's now a newly created network
[[file://home/crito/Pictures/org/libvirt_isolated_network5.png]]

** Creating a routed network
- name the new network
[[file://home/crito/Pictures/org/libvirt_routed_network.png]]

- you need to specifiy the local LAN network that your host machine is attached too
[[file://home/crito/Pictures/org/libvirt_routed_network2.png]]

- select the network connection type. The physical device that the LAN is connected to needs to be selected and Mode Routed.
[[file://home/crito/Pictures/org/libvirt_routed_network3.png]]

- In the network tab you should now see a new network created
  
** Create a disk image that can be mounted
- create the disk that is to be mounted
#+BEGIN_SRC sh
qemu-img create -f raw addondisk1.img 1G
#+END_SRC

- add the disk to the VM
#+BEGIN_SRC sh
virsh attach-disk virtual_machine_name --source /var/lib/libvirt/images/addondisk1.img --target vdc --persistent
#+END_SRC
this disk will be attached at /dev/vdc and is persistent on reboot

- now add the new filesystem and mount
#+BEGIN_SRC sh
mkfs.ext4 /dev/vdc1
mount /dev/vdc1 /mnt/new_disk
#+END_SRC

* Lecture
* Tutorial
* Books
* Links
[[https://www.ibm.com/developerworks/linux/library/l-libvirt/][Anatomy of the libvirt Virtualization Library - IBM DevelperWorks]]
[[http://blog.bodhizazen.com/linux/virt-manager-bridged-networking/][virt-manager Bridged Networking - Shadows of epiphany]]
