#+TAGS: bind dns bind9


* BIND
* Cmds
named-checkzone - this will check zone file syntax for errors

* Files 
/etc/bind - this holds all the configuration files
/etc/bind/named.conf.options - this files has options such as setting forwarding dns servers
/etc/bind/named.conf.local   - this is where we configure the base zones
** named.conf - this file is the main configration file for BIND
*** This is the secure named.conf file from cymru.com
#+BEGIN_EXAMPLE
// @(#)named.conf 02 OCT 2001 Team Cymru noc@cymru.com 
// Set up our ACLs 
// In BIND 8, ACL names with quotes were treated as different from 
// the same name without quotes. In BIND 9, both are treated as 
// the same. 
acl "xfer" { 
    none;   // Allow no transfers.  If we have other 
            // name servers, place them here. 
            
};

acl "trusted" {


// Place our internal and DMZ subnets in here so that 
// intranet and DMZ clients may send DNS queries.  This 
// also prevents outside hosts from using our name server 
// as a resolver for other domains. 
192.168.1.0/24; 
localhost;

};

logging {


channel default_syslog {
// Send most of the named messages to syslog. 
syslog local2; 
severity debug;

}; 

channel audit_log {
// Send the security related messages to a separate file. 
file "/var/named/bind/named.log"; 
severity debug; 
print-time yes;

}; 

category default { default_syslog; }; 
category general { default_syslog; }; 
category security { audit_log; default_syslog; }; 
category config { default_syslog; }; 
category resolver { audit_log; }; 
category xfer-in { audit_log; }; 
category xfer-out { audit_log; }; 
category notify { audit_log; }; 
category client { audit_log; }; 
category network { audit_log; }; 
category update { audit_log; }; 
category queries { audit_log; }; 
category lame-servers { audit_log; };

};
// Set options for security 
options { 
    directory "/var/named"; 
    pid-file "/var/named/named.pid"; 
    statistics-file "/var/named/named.stats"; 
    memstatistics-file "/var/named/named.memstats"; 
    dump-file "/var/adm/named.dump"; 
    zone-statistics yes;

    // Prevent DoS attacks by generating bogus zone transfer 
    // requests.  This will result in slower updates to the 
    // slave servers (e.g. they will await the poll interval 
    // before checking for updates). 
    notify no;

            // Generate more efficient zone transfers.  This will place 
    // multiple DNS records in a DNS message, instead of one per 
    // DNS message. 
    transfer-format many-answers;

    // Set the maximum zone transfer time to something more 
    // reasonable.  In this case, we state that any zone transfer 
    // that takes longer than 60 minutes is unlikely to ever 
    // complete.  WARNING:  If you have very large zone files, 
    // adjust this to fit your requirements. 
    max-transfer-time-in 60;

    // We have no dynamic interfaces, so BIND shouldn't need to 
    // poll for interface state {UP|DOWN}. 
    interface-interval 0;

    allow-transfer { 
        // Zone tranfers limited to members of the 
        // "xfer" ACL. 
        xfer; 
    };

    allow-query { 
        // Accept queries from our "trusted" ACL.  We will 
        // allow anyone to query our master zones below. 
        // This prevents us from becoming a free DNS server 
        // to the masses. 
        trusted; 
    };

    allow-query-cache { 
        // Accept queries of our cache from our "trusted" ACL.  
        trusted; 
    }; 
};


view "internal-in" in { 
    // Our internal (trusted) view. We permit the internal networks 
    // to freely access this view. We perform recursion for our 
    // internal hosts, and retrieve data from the cache for them.

    match-clients { trusted; }; 
    recursion yes; 
    additional-from-auth yes; 
    additional-from-cache yes;

zone "." in { 
    // Link in the root server hint file. 
    type hint; 
    file "db.cache"; 
};

zone "0.0.127.in-addr.arpa" in { 
    // Allow queries for the 127/8 network, but not zone transfers. 
    // Every name server, both slave and master, will be a master 
    // for this zone. 
    type master; 
    file "master/db.127.0.0";

    allow-query { 
        any; 
    };

    allow-transfer { 
        none; 
    }; 
};

zone "localhost" {
   type master;
   file "db.localhost";
    allow-query { 
        any; 
    };

    allow-transfer { 
        none;
   };
};

zone "internal.example.com" in { 
    // Our internal A RR zone. There may be several of these. 
    type master; 
    file "master/db.internal"; 
};

zone "1.168.192.in-addr.arpa" in { 
    // Our internal PTR RR zone. Again, there may be several of these. 
    type master; 
    file "master/db.192.168.1"; 
};


};
// Create a view for external DNS clients. 
view "external-in" in { 
    // Our external (untrusted) view. We permit any client to access 
    // portions of this view. We do not perform recursion or cache 
    // access for hosts using this view.

    match-clients { any; }; 
    recursion no; 
    additional-from-auth no; 
    additional-from-cache no;

// Link in our zones 
zone "." in { 
    type hint; 
    file "db.cache"; 
};
zone "example.net" in { 
    type master; 
    file "master/db.example";

    allow-query { 
        any; 
    }; 
};

zone "1.1.10.in-addr.arpa" in { 
    type master; 
    file "master/db.10.1.1";

    allow-query { 
        any; 
    }; 
};


};
// Create a view for all clients perusing the CHAOS class.
// We allow internal hosts to query our version number.
// This is a good idea from a support point of view.
view "external-chaos" chaos { 
    match-clients { any; }; 
    recursion no;

    zone "." { 
        type hint; 
        file "/dev/null"; 
    };

    zone "bind" { 
        type master; 
        file "master/db.bind";

        allow-query { 
            trusted; 
        }; 
        allow-transfer { 
            none; 
        }; 
    };


};
The db.bind zone file

The db.bind zone file is used to track miscreants who attempt to query the CHAOS TXT records version.bind and authors.bind.  You can also use this zone file to change the strings returned by such queries.  Using the "version" directive in the options stanza will block the version.bind query, but it will not log such attempts.
; @(#)db.bind v1.2 25 JAN 2001 Team Cymru Thomas noc@cymru.com 
; 
$TTL    1D 
$ORIGIN bind. 
@       1D      CHAOS   SOA     localhost. root.localhost. ( 
                2001013101      ; serial 
                3H              ; refresh 
                1H              ; retry 
                1W              ; expiry 
                1D )            ; minimum 
        CHAOS NS        localhost.

version.bind.   CHAOS  TXT "BIND 9.1.3+robhacks" 
authors.bind.   CHAOS  TXT "are better coders than I. :)" 
#+END_EXAMPLE

* Description
* Usage
** Configure a Caching-Only Name Server
- install bind and it's utils
#+BEGIN_SRC sh
yum install -y bind bind-utils
#+END_SRC

- edit the /etc/named.conf
  - listen-on port 53
  - allow-query
  - dnssec-validation
#+BEGIN_EXAMPLE
options {
        listen-on port 53 { any; }; // edited from 127.0.0.1 to any
        listen-on-v6 port 53 { ::1; };
        directory       "/var/named";
        dump-file       "/var/named/data/cache_dump.db";
        statistics-file "/var/named/data/named_stats.txt";
        memstatistics-file "/var/named/data/named_mem_stats.txt";
        allow-query     { any; }; // edited from localhost to any

        /* 
         - If you are building an AUTHORITATIVE DNS server, do NOT enable recursion.
         - If you are building a RECURSIVE (caching) DNS server, you need to enable 
           recursion. 
         - If your recursive DNS server has a public IP address, you MUST enable access 
           control to limit queries to your legitimate users. Failing to do so will
           cause your server to become part of large scale DNS amplification 
           attacks. Implementing BCP38 within your network would greatly
           reduce such attack surface 
        */
        recursion yes;

        dnssec-enable yes;
        dnssec-validation no; //edited for yes to no

        /* Path to ISC DLV key */
        bindkeys-file "/etc/named.iscdlv.key";

        managed-keys-directory "/var/named/dynamic";

        pid-file "/run/named/named.pid";
        session-keyfile "/run/named/session.key";
};

logging {
        channel default_debug {
                file "data/named.run";
                severity dynamic;
        };
};

zone "." IN {
        type hint;
        file "named.ca";
};

include "/etc/named.rfc1912.zones";
include "/etc/named.root.key";
#+END_EXAMPLE

- check the configuration
#+BEGIN_SRC sh
named-checkconf
#+END_SRC

- add the firewall rules
#+BEGIN_SRC sh
firewall-cmd --permanent --add-service=dns
firewall-cmd --reload
#+END_SRC

- start and enable the dns service
#+BEGIN_SRC sh
systemctl start named
systemctl enable named
#+END_SRC

- check that the caching name server is working
#+BEGIN_SRC sh
nslookup linuxacademy.com 127.0.0.1
#+END_SRC
if no output is produced that means that the dns isn't working correctly

* Lecture
* Tutorial
** Configuring BIND9 DNS - Linux Academy
LabGuide: [[file://home/crito/Documents/Linux/Labs/configuring-bind9.pdf][Configuring BIND9 DNS]]

- Server Install and Setup
  - first install apache2
    #+BEGIN_SRC sh
    apt-get install apache2
    #+END_SRC
    - this is just used to create a valid html page
  - test it's running
    #+BEGIN_SRC sh
    telnet 80
    helo
    #+END_SRC
  - create a file in /var/www
    - test.html
    #+BEGIN_EXAMPLE
    <html>
    <body>
      Test Page
    </body>
    </html>
    #+END_EXAMPLE
  - bind hostname to ip addr(local)
    - /etc/hosts
    #+BEGIN_EXAMPLE
    10.0.0.100		alickmitchell1.mylabserver.com
    #+END_EXAMPLE
  - install bind9
    #+BEGIN_SRC sh
    apt-get install bind9 bind9utils
    #+END_SRC
  - edit /etc/bind/named.conf.OPTIONS 
    #+BEGIN_EXAMPLE
    FORWARDERS {
    	10.0.0.2;
    	8.8.8.8;
    };
    #+END_EXAMPLE
  - edit /etc/bind/named.conf.local
    - adding zone information
    #+BEGIN_EXAMPLE
    zone "mylabserver.com" {
    	type master;
    	file "/etc/bind/zones/db.mylabserver.com";
    {;
    zone "0.0.10.in-addr.arpa"{
    	type master;
	file "/etc/bind/zones/db.10";
    };
    #+END_EXAMPLE
  - create a directory called /etc/bind/zones
  - copy db.local zones/db.mylabserver.com
  - edit db.mylabserver.com binding localhost to the zone we have created
  - copy db.127 zones/db.10 - this is for the reverse lookup
  - edit /edit/resolv.conf
    #+BEGIN_EXAMPLE
    nameserver	10.0.0.100
    nameserver	10.0.0.2
    search	mylabserver.com
    domain	mylabserver.com
    #+END_EXAMPLE
  - restart the bind service
    #+BEGIN_SRC sh
    service bind9 restart
    #+END_SRC
  - confirm that the dns server is resolving ip
    #+BEGIN_SRC sh
    tail -f /var/log/syslog
    #+END_SRC
  - test with nslookup check forward and reverse zone
    #+BEGIN_SRC sh
    nslookup mylabserver.com
    nslookup 10.0.0.100
    #+END_SRC
  
- Configure the client
  - ping bind server to check that they see each other
  - edit /etc/resolv.conf
    #+BEGIN_EXAMPLE
    nameserver	10.0.0.100
    nameserver	10.0.0.2
    search	mylabserver.com
    domain	mylabserver.com
    #+END_EXAMPLE
  - test pinging mylabserver.com
  - install lynx to test connection to webpage
    #+BEGIN_SRC sh
    apt-get install lynx
    lynx http://www.mylabserver.com/test.html
    #+END_SRC
  
* Books
[[file://home/crito/Documents/SysAdmin/DNS/Pro_DNS_and_BIND_10.pdf][Pro DNS and BIND 10]]
[[file://home/crito/Documents/SysAdmin/DNS/dns_and_bind-oreilly_5e.pdf][DNS and BIND - O'Reilly 5e]]

* Links
[[http://www.unixwiz.net/techtips/bind9-chroot.html][Building and Configuring BIND 9 in a chroot jail]]
