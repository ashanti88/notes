#+TAGS: mail mda pop3 imap dovecot pop3s imaps


* Dovecot
HomePage: [[https://wiki.dovecot.org/FrontPage][wiki.dovecot.org]]
* Files
/etc/dovecot/dovecot.conf - this is the main configuration that pullsin the conf.d config files
/etc/dovecot/conf.d       - this holds all the individual config files

* Cmds
- [[file://home/crito/org/tech/cmds/doveadm.org][doveadm]]

* Description
* Usage
- find dovecot configuration file location
#+BEGIN_SRC sh
doveconf -n | head -n1
#+END_SRC

- dump configuration
#+BEGIN_SRC sh
doveconf -n
#+END_SRC

** Basic Configuration
https://wiki.dovecot.org/BasicConfiguration
1. find dovecot configuration file location
#+BEGIN_SRC sh
doveconf -n | head -n1
#+END_SRC

2. copy files from location to /etc/dovecot/
#+BEGIN_SRC sh
cp -r /usr/share/doc/dovecot/example-config/* /etc/dovecot/
#+END_SRC

3. Authentication
#+BEGIN_SRC sh
echo "$USER:{PLAIN}password:$UID:$GID::$HOME" > users
sudo mv users /etc/dovecot/
#+END_SRC

4. 
** Install and Configure an IMAP and IMAPS Service

- find what group our Postfix account runs as
#+BEGIN_SRC sh
cat /etc/group | grep postfix
#+END_SRC
usually called mail

- install dovecot
#+BEGIN_SRC sh
yum install dovecot
#+END_SRC

- edit the /etc/dovecot/conf.d/10-mail.conf
#+BEGIN_EXAMPLE
mail_location = mbox:~/mail:INBOX=/var/mail/%u
mail_privileged_group = mail
#+END_EXAMPLE

- edit /etc/dovecot/dovecot.conf
#+BEGIN_EXAMPLE
protocols = imap pop3 imaps pop3s
#+END_EXAMPLE
in centos7 imaps and pop3s no longer need to be specified

- makesure that /etc/pki/dovecot has been created
  
- confirm the cert and key locations in /etc/dovecot/conf.d/10-ssl.conf
#+BEGIN_EXAMPLE
ssl_cert = </etc/pki/dovecot/certs/dovecot.pem
ssl_key = </etc/pki/dovecot/private/dovecot.pem
ssl_protocols = !SSLv2 !SSLv3 # this will ensure that dovecot avoids using V2 V3 which are known to be insecure
#+END_EXAMPLE

- start dovecot
#+BEGIN_SRC sh
systemctl start dovecot
#+END_SRC

- check that dovecot is listening
#+BEGIN_SRC sh
systemctl status dovecot
netstat -nptlu | grep dovecot
#+END_SRC

*** Client Setup and Testing
    
- install mutt
#+BEGIN_SRC sh
yum install mutt
#+END_SRC
this will allow us to send mail from the terminal

- sending mail
#+BEGIN_SRC sh
mutt -s "this is a test email to a user called user" user@alickmitchell1.mylabserver.com < /dev/null
#+END_SRC

- send mail with an attachment
#+BEGIN_SRC sh
mutt -s "Test attachment" user@alickmitchell1.mylabserver.com -a /home/jim/test.txt < /dev/null
#+END_SRC

- sending mail with telnet
#+BEGIN_EXAMPLE
[user@alickmitchell1 ~]$ telnet localhost smtp
Trying ::1...
Connected to localhost.
Escape character is '^]'.
220 alickmitchell1.mylabserver.com ESMTP Postfix
HELO
501 Syntax: HELO hostname
HELO alickmitchell1.mylabserver.com
250 alickmitchell1.mylabserver.com
mail from: alick@lahome.com
250 2.1.0 Ok
rcpt to: user@alickmitchell1.mylabserver.com
250 2.1.5 Ok
data
354 End data with <CR><LF>.<CR><LF>
This is a test message for the user user
Thanks
.
250 2.0.0 Ok: queued as 0FC888C29D5
quit
221 2.0.0 Bye
Connection closed by foreign host.
You have new mail in /var/spool/mail/user
[user@alickmitchell1 ~]$ mutt
3 kept, 0 deleted.
#+END_EXAMPLE

** Managin Remote Email Delivery with Dovecot - CentOS6 LPIC2
   
- install required pkgs
#+BEGIN_SRC sh
yum install dovecot
#+END_SRC

- edit protocols in /etc/dovecot/dovecot.conf
#+BEGIN_EXAMPLE
protocols = imap pop3 lmtp
#+END_EXAMPLE

- listening interface
#+BEGIN_EXAMPLE
listen *, ::
#+END_EXAMPLE
this will listen on all ipv4 and ipv6 interfaces

- set the runtime data directory
#+BEGIN_EXAMPLE
base_dir = /var/run/dovecot
#+END_EXAMPLE

- confirm that the include conf.d line is at the end of the config
#+BEGIN_EXAMPLE
!include conf.d/*.conf
#+END_EXAMPLE
with dovecot the "!" means to include, unlike most other configs where a ! indicates don't

- conf.d/10-mail.conf
#+BEGIN_EXAMPLE
mail_location = maildir:~/Maildir
#+END_EXAMPLE
this would put mail into each users home directory

- start the dovecot service
#+BEGIN_SRC sh
service dovecot start
service dovecot status
#+END_SRC

- test ssl
#+BEGIN_SRC sh
openssl s_client -connect localhost:995 # pop3s
openssl s_client -connect localhost:993 # imaps
#+END_SRC







** Managing E-mail Devlivery - Sieve and Dovecot
Sieve - is a language for filtering e-mail messages

Actions
  - discard  - deletes the message
  - reject   - deletes the message with a bounce reply
  - redirect - usually used at the server level, can be used to intercept messages and forward to a different address
  - fileinto - move to specific folder - can be used to archive sort into folders.
  - stop     - stop processing Sieve rules. Typically used after the delete action. It can also be used to whitelist an address by placing this before any spam filtering is done
  - keep     - keep processing Sieve rules.
    
- install pkgs
#+BEGIN_SRC sh
yum install dovecot-pigeonhole
#+END_SRC
   
- enable the sieve plugin for dovecot
/etc/dovecot/conf.d/20-lmtp.conf
#+BEGIN_SRC sh
mail_plugins = $mail_plugins autocreate quota sieve
#+END_SRC
just add to the end of the mail_plugins line

- create a users sieve rules file
~/.dovecot.sieve - this locations is set in 90-sieve.conf
#+BEGIN_EXAMPLE
require ["fileinto"];

#If it is spam, file it there
if header :contains "subject" "Spam"
{
	fileinto "Spam";
}

# The cmd "keep" is executed automatically, if no other action is taken
#+END_EXAMPLE

- restart the service
#+BEGIN_SRC sh
systemctl restart dovecot
systemctl status dovecot
#+END_SRC

- test the rule that was set
#+BEGIN_SRC sh
date | mail -s Spam user
tail /var/log/maillog
#+END_SRC
we should see a message in the maillog that indicates that the message was moved to the "Spam" directory

* Lecture
* Tutorial
* Books
* Links
